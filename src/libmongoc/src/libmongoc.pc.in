prefix=@prefix@
exec_prefix=${prefix}
libdir=@libdir@

Name: $<TARGET_PROPERTY:@GENERATE_TARGET@,pkg_config_NAME>
Description: $<TARGET_PROPERTY:@GENERATE_TARGET@,pkg_config_DESCRIPTION>
Version: $<TARGET_PROPERTY:@GENERATE_TARGET@,pkg_config_VERSION>

%define $<is-empty: $<STREQUAL:@empty@,
%define $<<not-empty: $<NOT:$<is-empty:

#~ "Requires" dependencies:
%define requires_joiner @newline@~ Requires: ~@space@
%define requires_prop $<TARGET_PROPERTY:@GENERATE_TARGET@,pkg_config_REQUIRES>
#~ Conditional: Only expand a first "\nRequires: " if Requires is non-empty:
%define has_requires $<<not-empty:requires_prop>>
~$<has_requires:requires_joiner>
#~ The rest:
~$<JOIN:requires_prop,requires_joiner>

~@newline@~

#~ Link options:
Libs: -L${libdir} -l$<TARGET_PROPERTY:@GENERATE_TARGET@,OUTPUT_NAME> ~@space@~
    #~ Join each "Libs" item with spaces. This could be more robust, but it suits our purposes:
    %define libs_prop $<TARGET_PROPERTY:@GENERATE_TARGET@,pkg_config_LIBS>
    #~ Remove duplicate items, which will usually be redundant link paths:
    %define libs $<REMOVE_DUPLICATES:libs_prop>
    $<JOIN:libs,@space@>~

    #~ Add link options. Don't remove duplicates, because they may be important
    %define link_opts $<TARGET_PROPERTY:@GENERATE_TARGET@,INTERFACE_LINK_OPTIONS>
    $<$<<not-empty:link_opts>>:@space@$<JOIN:link_opts,@space@>>

~@newline@~

#~ Compile-flags:
%define cflags_prop $<TARGET_PROPERTY:@GENERATE_TARGET@,pkg_config_CFLAGS>
Cflags: $<JOIN:cflags_prop,@space@> ~@space@~

    #~ Options:
    %define opts_prop $<TARGET_PROPERTY:@GENERATE_TARGET@,INTERFACE_COMPILE_OPTIONS>
    %define opts $<REMOVE_DUPLICATES:opts_prop>
    $<JOIN:opts,@space@>~

    #~ Preprocessor definitions:
    %define defs_prop $<TARGET_PROPERTY:@GENERATE_TARGET@,INTERFACE_COMPILE_DEFINITIONS>
    %define defs $<REMOVE_DUPLICATES:defs_prop>
    $<$<<not-empty:defs>>: -D>~
              $<JOIN:defs, -D>~

    #~ Inclusions:
    %define inc_prop $<TARGET_PROPERTY:@GENERATE_TARGET@,pkg_config_INCLUDE_DIRECTORIES>
    %define incs $<REMOVE_DUPLICATES:inc_prop>
    #~ Absolute path includes are kept absolute:
    %define abs_includes $<FILTER:incs,INCLUDE,^/>
    $<$<<not-empty:abs_includes>>: -I>~
              $<JOIN:abs_includes, -I>~
    #~ Relative includes are made relative to ${prefix}
    %define relative_includes $<FILTER:incs,EXCLUDE,^/>
    $<$<<not-empty:relative_includes>>: -I${prefix}/>~
              $<JOIN:relative_includes, -I${prefix}/>
