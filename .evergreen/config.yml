####################################
# Evergreen configuration
#
# Generated with evergreen_config_generator from
# github.com/mongodb-labs/drivers-evergreen-tools
#
# DO NOT EDIT THIS FILE
#
####################################
stepback: true
command_type: system
exec_timeout_secs: 2400
functions:
  fetch source:
  - command: git.get_project
    params:
      directory: mongoc
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        if [ -n "${github_pr_number}" -o "${is_patch}" = "true" ]; then
           # This is a GitHub PR or patch build, probably branched from master
           if command -v python3 2>/dev/null; then
              # Prefer python3 if it is available
              echo $(python3 ./build/calc_release_version.py --next-minor) > VERSION_CURRENT
           else
              echo $(python ./build/calc_release_version.py --next-minor) > VERSION_CURRENT
           fi
           VERSION=$VERSION_CURRENT-${version_id}
        else
           VERSION=latest
        fi
        echo "CURRENT_VERSION: $VERSION" > expansion.yml
  - command: expansions.update
    params:
      file: mongoc/expansion.yml
  - command: shell.exec
    params:
      continue_on_err: true
      shell: bash
      script: |-
        set -o errexit
        rm -f *.tar.gz
        curl --retry 5 https://s3.amazonaws.com/mciuploads/${project}/${branch_name}/mongo-c-driver-${CURRENT_VERSION}.tar.gz --output mongoc.tar.gz -sS --max-time 120
  upload release:
  - command: shell.exec
    params:
      shell: bash
      script: '[ -f mongoc/cmake_build/mongo*gz ] && mv mongoc/cmake_build/mongo*gz
        mongoc.tar.gz'
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/mongo-c-driver-${CURRENT_VERSION}.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc.tar.gz
      content_type: ${content_type|application/x-gzip}
  upload build:
  - command: archive.targz_pack
    params:
      target: ${build_id}.tar.gz
      source_dir: mongoc
      include:
      - ./**
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${task_name}/${build_id}.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: ${build_id}.tar.gz
      content_type: ${content_type|application/x-gzip}
  release archive:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Need modern Sphinx for :caption: in literal includes.
        python -m virtualenv venv
        cd venv
        . bin/activate
        ./bin/pip install sphinx docutils==0.17.1
        cd ..
        export MONGOC_TEST_FUTURE_TIMEOUT_MS=30000
        export MONGOC_TEST_SKIP_LIVE=on
        export MONGOC_TEST_SKIP_SLOW=on
        sh .evergreen/check-release-archive.sh
  install ssl:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        SSL=${SSL} sh .evergreen/install-ssl.sh
  fetch build:
  - command: shell.exec
    params:
      continue_on_err: true
      shell: bash
      script: |-
        set -o errexit
        rm -rf mongoc
  - command: s3.get
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${BUILD_NAME}/${build_id}.tar.gz
      bucket: mciuploads
      local_file: build.tar.gz
  - command: shell.exec
    params:
      continue_on_err: true
      shell: bash
      script: |-
        set -o errexit
        mkdir mongoc
        if command -v gtar 2>/dev/null; then
           TAR=gtar
        else
           TAR=tar
        fi
        $TAR xf build.tar.gz -C mongoc/
  upload docs:
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc/cmake_build/src/libbson
      shell: bash
      script: |-
        set -o errexit
        export AWS_ACCESS_KEY_ID=${aws_key}
        export AWS_SECRET_ACCESS_KEY=${aws_secret}
        aws s3 cp doc/html s3://mciuploads/${project}/docs/libbson/${CURRENT_VERSION} --recursive --acl public-read --region us-east-1
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/docs/libbson/${CURRENT_VERSION}/index.html
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/cmake_build/src/libbson/doc/html/index.html
      content_type: text/html
      display_name: libbson docs
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc/cmake_build/src/libmongoc
      shell: bash
      script: |-
        set -o errexit
        export AWS_ACCESS_KEY_ID=${aws_key}
        export AWS_SECRET_ACCESS_KEY=${aws_secret}
        aws s3 cp doc/html s3://mciuploads/${project}/docs/libmongoc/${CURRENT_VERSION} --recursive --acl public-read --region us-east-1
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/docs/libmongoc/${CURRENT_VERSION}/index.html
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/cmake_build/src/libmongoc/doc/html/index.html
      content_type: text/html
      display_name: libmongoc docs
  upload man pages:
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Get "aha", the ANSI HTML Adapter.
        git clone --depth 1 https://github.com/theZiz/aha.git aha-repo
        cd aha-repo
        make
        cd ..
        mv aha-repo/aha .
        sh .evergreen/man-pages-to-html.sh libbson cmake_build/src/libbson/doc/man > bson-man-pages.html
        sh .evergreen/man-pages-to-html.sh libmongoc cmake_build/src/libmongoc/doc/man > mongoc-man-pages.html
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/man-pages/libbson/${CURRENT_VERSION}/index.html
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/bson-man-pages.html
      content_type: text/html
      display_name: libbson man pages
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/man-pages/libmongoc/${CURRENT_VERSION}/index.html
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/mongoc-man-pages.html
      content_type: text/html
      display_name: libmongoc man pages
  upload coverage:
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export AWS_ACCESS_KEY_ID=${aws_key}
        export AWS_SECRET_ACCESS_KEY=${aws_secret}
        aws s3 cp coverage s3://mciuploads/${project}/${build_variant}/${revision}/${version_id}/${build_id}/coverage/ --recursive --acl public-read --region us-east-1
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/coverage/index.html
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/coverage/index.html
      content_type: text/html
      display_name: Coverage Report
  abi report:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        sh .evergreen/abi-compliance-check.sh
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export AWS_ACCESS_KEY_ID=${aws_key}
        export AWS_SECRET_ACCESS_KEY=${aws_secret}
        aws s3 cp abi-compliance/compat_reports s3://mciuploads/${project}/${build_variant}/${revision}/${version_id}/${build_id}/abi-compliance/compat_reports --recursive --acl public-read --region us-east-1
        if [ -e ./abi-compliance/abi-error.txt ]; then
          exit 1
        else
          exit 0
        fi
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/abi-compliance/compat_report.html
      bucket: mciuploads
      permissions: public-read
      local_files_include_filter: mongoc/abi-compliance/compat_reports/**/*.html
      content_type: text/html
      display_name: 'ABI Report:'
  upload scan artifacts:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        if find scan -name \*.html | grep -q html; then
          (cd scan && find . -name index.html -exec echo "<li><a href='{}'>{}</a></li>" \;) >> scan.html
        else
          echo "No issues found" > scan.html
        fi
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export AWS_ACCESS_KEY_ID=${aws_key}
        export AWS_SECRET_ACCESS_KEY=${aws_secret}
        aws s3 cp scan s3://mciuploads/${project}/${build_variant}/${revision}/${version_id}/${build_id}/scan/ --recursive --acl public-read --region us-east-1
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/scan/index.html
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/scan.html
      content_type: text/html
      display_name: Scan Build Report
  upload mo artifacts:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        DIR=MO
        [ -d "/cygdrive/c/data/mo" ] && DIR="/cygdrive/c/data/mo"
        [ -d $DIR ] && find $DIR -name \*.log | xargs tar czf mongodb-logs.tar.gz
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/logs/${task_id}-${execution}-mongodb-logs.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/mongodb-logs.tar.gz
      content_type: ${content_type|application/x-gzip}
      display_name: mongodb-logs.tar.gz
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/logs/${task_id}-${execution}-orchestration.log
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/MO/server.log
      content_type: ${content_type|text/plain}
      display_name: orchestration.log
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Find all core files from mongodb in orchestration and move to mongoc
        DIR=MO
        MDMP_DIR=$DIR
        [ -d "/cygdrive/c/data/mo" ] && DIR="/cygdrive/c/data/mo"
        [ -d "/cygdrive/c/mongodb" ] && MDMP_DIR="/cygdrive/c/mongodb"
        core_files=$(/usr/bin/find -H $MO $MDMP_DIR \( -name "*.core" -o -name "*.mdmp" \) 2> /dev/null)
        for core_file in $core_files
        do
          base_name=$(echo $core_file | sed "s/.*\///")
          # Move file if it does not already exist
          if [ ! -f $base_name ]; then
            mv $core_file .
          fi
        done
  - command: archive.targz_pack
    params:
      target: mongo-coredumps.tgz
      source_dir: mongoc
      include:
      - ./**.core
      - ./**.mdmp
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/coredumps/${task_id}-${execution}-coredumps.log
      bucket: mciuploads
      permissions: public-read
      local_file: mongo-coredumps.tgz
      content_type: ${content_type|application/x-gzip}
      display_name: Core Dumps - Execution ${execution}
      optional: 'True'
  backtrace:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        ./.evergreen/debug-core-evergreen.sh
  upload working dir:
  - command: archive.targz_pack
    params:
      target: working-dir.tar.gz
      source_dir: mongoc
      include:
      - ./**
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/artifacts/${task_id}-${execution}-working-dir.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: working-dir.tar.gz
      content_type: ${content_type|application/x-gzip}
      display_name: working-dir.tar.gz
  upload test results:
  - command: attach.results
    params:
      file_location: mongoc/test-results.json
  bootstrap mongo-orchestration:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export MONGODB_VERSION=${VERSION}
        export TOPOLOGY=${TOPOLOGY}
        export IPV4_ONLY=${IPV4_ONLY}
        export AUTH=${AUTH}
        export AUTHSOURCE=${AUTHSOURCE}
        export SSL=${SSL}
        export ORCHESTRATION_FILE=${ORCHESTRATION_FILE}
        export OCSP=${OCSP}
        export REQUIRE_API_VERSION=${REQUIRE_API_VERSION}
        sh .evergreen/integration-tests.sh
  run tests:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export COMPRESSORS='${COMPRESSORS}'
        export CC='${CC}'
        export AUTH=${AUTH}
        export SSL=${SSL}
        export URI=${URI}
        export IPV4_ONLY=${IPV4_ONLY}
        export VALGRIND=${VALGRIND}
        export MONGOC_TEST_URI=${URI}
        export DNS=${DNS}
        export ASAN=${ASAN}
        export CLIENT_SIDE_ENCRYPTION=${CLIENT_SIDE_ENCRYPTION}
        # Hide credentials.
        set +o xtrace
        set +o errexit
        # Only set creds if testing with Client Side Encryption.
        # libmongoc may build with CSE enabled (if the host has libmongocrypt installed)
        # and will try to run those tests (which fail on ASAN unless spawning is bypassed).
        if [ -n "$CLIENT_SIDE_ENCRYPTION" ]; then
          echo "testing with CSE"
          export MONGOC_TEST_AWS_SECRET_ACCESS_KEY="${client_side_encryption_aws_secret_access_key}"
          export MONGOC_TEST_AWS_ACCESS_KEY_ID="${client_side_encryption_aws_access_key_id}"
          export MONGOC_TEST_AZURE_TENANT_ID="${client_side_encryption_azure_tenant_id}"
          export MONGOC_TEST_AZURE_CLIENT_ID="${client_side_encryption_azure_client_id}"
          export MONGOC_TEST_AZURE_CLIENT_SECRET="${client_side_encryption_azure_client_secret}"
          export MONGOC_TEST_GCP_EMAIL="${client_side_encryption_gcp_email}"
          export MONGOC_TEST_GCP_PRIVATEKEY="${client_side_encryption_gcp_privatekey}"
          export MONGOC_TEST_CSFLE_TLS_CA_FILE=../drivers-evergreen-tools/.evergreen/x509gen/ca.pem
          export MONGOC_TEST_CSFLE_TLS_CERTIFICATE_KEY_FILE=../drivers-evergreen-tools/.evergreen/x509gen/client.pem
        fi
        export LOADBALANCED=${LOADBALANCED}
        export SINGLE_MONGOS_LB_URI="${SINGLE_MONGOS_LB_URI}"
        export MULTI_MONGOS_LB_URI="${MULTI_MONGOS_LB_URI}"
        set -o errexit
        sh .evergreen/run-tests.sh
  run tests bson:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CC="${CC}" sh .evergreen/run-tests-bson.sh
  run auth tests:
  - command: shell.exec
    type: test
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export AUTH_HOST='${auth_host}'
        export AUTH_PLAIN='${auth_plain}'
        export AUTH_MONGODBCR='${auth_mongodbcr}'
        export AUTH_GSSAPI='${auth_gssapi}'
        export AUTH_CROSSREALM='${auth_crossrealm}'
        export AUTH_GSSAPI_UTF8='${auth_gssapi_utf8}'
        export ATLAS_FREE='${atlas_free}'
        export ATLAS_FREE_SRV='${atlas_free_srv}'
        export ATLAS_REPLSET='${atlas_replset}'
        export ATLAS_REPLSET_SRV='${atlas_replset_srv}'
        export ATLAS_SHARD='${atlas_shard}'
        export ATLAS_SHARD_SRV='${atlas_shard_srv}'
        export ATLAS_TLS11='${atlas_tls11}'
        export ATLAS_TLS11_SRV='${atlas_tls11_srv}'
        export ATLAS_TLS12='${atlas_tls12}'
        export ATLAS_TLS12_SRV='${atlas_tls12_srv}'
        export REQUIRE_TLS12='${require_tls12}'
        export OBSOLETE_TLS='${obsolete_tls}'
        export VALGRIND='${valgrind}'
        export ATLAS_SERVERLESS_SRV='${atlas_serverless_srv}'
        export ATLAS_SERVERLESS='${atlas_serverless}'
        sh .evergreen/run-auth-tests.sh
  run mock server tests:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CC="${CC}" VALGRIND=${VALGRIND} sh .evergreen/run-mock-server-tests.sh
  cleanup:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        cd MO
        mongo-orchestration stop
  windows fix:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        for i in $(find .evergreen -name \*.sh); do
          cat $i | tr -d '\r' > $i.new
          mv $i.new $i
        done
  make files executable:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        for i in $(find .evergreen -name \*.sh); do
          chmod +x $i
        done
  prepare kerberos:
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        if test "${keytab|}"; then
           echo "${keytab}" > /tmp/drivers.keytab.base64
           base64 --decode /tmp/drivers.keytab.base64 > /tmp/drivers.keytab
           cat .evergreen/kerberos.realm | $SUDO tee -a /etc/krb5.conf
        fi
  link sample program:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Compile a program that links dynamically or statically to libmongoc,
        # using variables from pkg-config or CMake's find_package command.
        export BUILD_SAMPLE_WITH_CMAKE=${BUILD_SAMPLE_WITH_CMAKE}
        export BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=${BUILD_SAMPLE_WITH_CMAKE_DEPRECATED}
        export ENABLE_SSL=${ENABLE_SSL}
        export ENABLE_SNAPPY=${ENABLE_SNAPPY}
        LINK_STATIC=  sh .evergreen/link-sample-program.sh
        LINK_STATIC=1 sh .evergreen/link-sample-program.sh
  link sample program bson:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Compile a program that links dynamically or statically to libbson,
        # using variables from pkg-config or from CMake's find_package command.
        BUILD_SAMPLE_WITH_CMAKE=  BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=  LINK_STATIC=  sh .evergreen/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=  BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=  LINK_STATIC=1 sh .evergreen/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=1 BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=  LINK_STATIC=  sh .evergreen/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=1 BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=  LINK_STATIC=1 sh .evergreen/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=1 BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=1 LINK_STATIC=  sh .evergreen/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=1 BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=1 LINK_STATIC=1 sh .evergreen/link-sample-program-bson.sh
  link sample program MSVC:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Build libmongoc with CMake and compile a program that links
        # dynamically or statically to it, using variables from CMake's
        # find_package command.
        export ENABLE_SSL=${ENABLE_SSL}
        export ENABLE_SNAPPY=${ENABLE_SNAPPY}
        LINK_STATIC=  cmd.exe /c .\\.evergreen\\link-sample-program-msvc.cmd
        LINK_STATIC=1 cmd.exe /c .\\.evergreen\\link-sample-program-msvc.cmd
  link sample program mingw:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Build libmongoc with CMake and compile a program that links
        # dynamically to it, using variables from pkg-config.exe.
        cmd.exe /c .\\.evergreen\\link-sample-program-mingw.cmd
  link sample program MSVC bson:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Build libmongoc with CMake and compile a program that links
        # dynamically or statically to it, using variables from CMake's
        # find_package command.
        export ENABLE_SSL=${ENABLE_SSL}
        export ENABLE_SNAPPY=${ENABLE_SNAPPY}
        LINK_STATIC=  cmd.exe /c .\\.evergreen\\link-sample-program-msvc-bson.cmd
        LINK_STATIC=1 cmd.exe /c .\\.evergreen\\link-sample-program-msvc-bson.cmd
  link sample program mingw bson:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Build libmongoc with CMake and compile a program that links
        # dynamically to it, using variables from pkg-config.exe.
        cmd.exe /c .\\.evergreen\\link-sample-program-mingw-bson.cmd
  update codecov.io:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CODECOV_TOKEN=${codecov_token}
        curl -s https://codecov.io/bash | bash
  debug-compile-coverage-notest-nosasl-nossl:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_COVERAGE=ON -DENABLE_EXAMPLES=OFF"
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=OFF SKIP_MOCK_TESTS=ON sh .evergreen/compile.sh
  debug-compile-coverage-notest-nosasl-openssl:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_COVERAGE=ON -DENABLE_EXAMPLES=OFF"
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=OPENSSL SKIP_MOCK_TESTS=ON sh .evergreen/compile.sh
  build mongohouse:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        if [ ! -d "drivers-evergreen-tools" ]; then
           git clone git@github.com:mongodb-labs/drivers-evergreen-tools.git
        fi
        cd drivers-evergreen-tools
        export DRIVERS_TOOLS=$(pwd)
        sh .evergreen/atlas_data_lake/build-mongohouse-local.sh
        cd ../
  run mongohouse:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      background: true
      shell: bash
      script: |-
        set -o errexit
        cd drivers-evergreen-tools
        export DRIVERS_TOOLS=$(pwd)
        sh .evergreen/atlas_data_lake/run-mongohouse-local.sh
  test mongohouse:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        echo "testing that mongohouse is running..."
        ps aux | grep mongohouse
        echo $(pwd)
        echo $(ls)
        ls > dir.txt
        cat dir.txt
        echo $(cat dir.txt)
        export RUN_MONGOHOUSE_TESTS=true
        ./src/libmongoc/test-libmongoc --no-fork -l /mongohouse/* -d --skip-tests .evergreen/skip-tests.txt
        unset RUN_MONGOHOUSE_TESTS
  test versioned api:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export COMPRESSORS='${COMPRESSORS}'
        export CC='${CC}'
        export AUTH=${AUTH}
        export SSL=${SSL}
        export URI=${URI}
        export IPV4_ONLY=${IPV4_ONLY}
        export VALGRIND=${VALGRIND}
        export MONGOC_TEST_URI=${URI}
        export DNS=${DNS}
        export ASAN=${ASAN}
        export MONGODB_API_VERSION=1
        sh .evergreen/run-tests.sh
        unset MONGODB_API_VERSION
  run aws tests:
  - command: shell.exec
    type: test
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Add AWS variables to a file.
        # Clone in one directory above so it does not get uploaded in working directory.
        git clone --depth=1 https://github.com/mongodb-labs/drivers-evergreen-tools.git ../drivers-evergreen-tools
        cat <<EOF > ../drivers-evergreen-tools/.evergreen/auth_aws/aws_e2e_setup.json
        {
            "iam_auth_ecs_account" : "${iam_auth_ecs_account}",
            "iam_auth_ecs_secret_access_key" : "${iam_auth_ecs_secret_access_key}",
            "iam_auth_ecs_account_arn": "arn:aws:iam::557821124784:user/authtest_fargate_user",
            "iam_auth_ecs_cluster": "${iam_auth_ecs_cluster}",
            "iam_auth_ecs_task_definition": "${iam_auth_ecs_task_definition}",
            "iam_auth_ecs_subnet_a": "${iam_auth_ecs_subnet_a}",
            "iam_auth_ecs_subnet_b": "${iam_auth_ecs_subnet_b}",
            "iam_auth_ecs_security_group": "${iam_auth_ecs_security_group}",
            "iam_auth_assume_aws_account" : "${iam_auth_assume_aws_account}",
            "iam_auth_assume_aws_secret_access_key" : "${iam_auth_assume_aws_secret_access_key}",
            "iam_auth_assume_role_name" : "${iam_auth_assume_role_name}",
            "iam_auth_ec2_instance_account" : "${iam_auth_ec2_instance_account}",
            "iam_auth_ec2_instance_secret_access_key" : "${iam_auth_ec2_instance_secret_access_key}",
            "iam_auth_ec2_instance_profile" : "${iam_auth_ec2_instance_profile}"
        }
        EOF
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Export the variables we need to construct URIs
        set +o xtrace
        export IAM_AUTH_ECS_ACCOUNT=${iam_auth_ecs_account}
        export IAM_AUTH_ECS_SECRET_ACCESS_KEY=${iam_auth_ecs_secret_access_key}
        . ../drivers-evergreen-tools/.evergreen/auth_aws/activate_venv.sh
        sh ./.evergreen/run-aws-tests.sh ${TESTCASE}
  clone drivers-evergreen-tools:
  - command: shell.exec
    params:
      shell: bash
      script: |-
        set -o errexit
        if [ ! -d "drivers-evergreen-tools" ]; then
            git clone git@github.com:mongodb-labs/drivers-evergreen-tools.git --depth=1
        fi
  run kms servers:
  - command: shell.exec
    params:
      background: true
      shell: bash
      script: |-
        set -o errexit
        echo "Starting mock KMS servers..."
        cd ./drivers-evergreen-tools/.evergreen/csfle
        . ./activate_venv.sh
        python -u kms_http_server.py --ca_file ../x509gen/ca.pem --cert_file ../x509gen/server.pem --port 8999 &
        python -u kms_http_server.py --ca_file ../x509gen/ca.pem --cert_file ../x509gen/expired.pem --port 9000 &
        python -u kms_http_server.py --ca_file ../x509gen/ca.pem --cert_file ../x509gen/wrong-host.pem --port 9001 &
        python -u kms_http_server.py --ca_file ../x509gen/ca.pem --cert_file ../x509gen/server.pem --require_client_cert --port 9002 &
        python -u kms_kmip_server.py &
        echo "Starting mock KMS servers... done."
  start load balancer:
  - command: shell.exec
    params:
      shell: bash
      script: |-
        set -o errexit
        export DRIVERS_TOOLS=./drivers-evergreen-tools
        export MONGODB_URI="${MONGODB_URI}"
        bash $DRIVERS_TOOLS/.evergreen/run-load-balancer.sh start
  - command: expansions.update
    params:
      file: lb-expansion.yml
  stop load balancer:
  - command: shell.exec
    params:
      shell: bash
      script: |-
        set -o errexit
        # Only run if a load balancer was started.
        if [ -z "${SINGLE_MONGOS_LB_URI}" ]; then
            echo "OK - no load balancer running"
            exit 0
        fi
        export DRIVERS_TOOLS=./drivers-evergreen-tools
        export MONGODB_URI="foo" # TODO: DRIVERS-1833 remove this.
        $DRIVERS_TOOLS/.evergreen/run-load-balancer.sh stop
pre:
- func: fetch source
- func: windows fix
- func: make files executable
- func: prepare kerberos
post:
- func: backtrace
- func: upload working dir
- func: upload mo artifacts
- func: upload test results
- func: cleanup
- func: stop load balancer
timeout:
- func: backtrace
tasks:
- name: check-headers
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        sh ./.evergreen/check-public-decls.sh
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        python ./.evergreen/check-preludes.py .
- name: make-release-archive
  commands:
  - func: release archive
  - func: upload docs
  - func: upload man pages
  - func: upload release
  - func: upload build
- name: hardened-compile
  tags:
  - hardened
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-fno-strict-overflow -D_FORTIFY_SOURCE=2 -fstack-protector-all -fPIE -O"
        export DEBUG="ON"
        export LDFLAGS="-pie -Wl,-z,relro -Wl,-z,now"
        export SANITIZE=""
        export SNAPPY="OFF"
        export ZLIB="OFF"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: abi-compliance-check
  commands:
  - func: abi report
- name: debug-compile-compression-zlib
  tags:
  - compression
  - zlib
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SNAPPY="OFF"
        export ZLIB="BUNDLED"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-compression-snappy
  tags:
  - compression
  - snappy
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SNAPPY="ON"
        export ZLIB="OFF"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-compression-zstd
  tags:
  - compression
  - zstd
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SNAPPY="OFF"
        export ZLIB="OFF"
        export ZSTD="ON"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-compression
  tags:
  - compression
  - snappy
  - zlib
  - zstd
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SNAPPY="ON"
        export ZLIB="BUNDLED"
        export ZSTD="ON"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-no-align
  tags:
  - debug-compile
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF"
        export SANITIZE=""
        export SNAPPY="OFF"
        export ZLIB="BUNDLED"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-nosasl-nossl
  tags:
  - debug-compile
  - nosasl
  - nossl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SSL="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-lto
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-flto"
        export DEBUG="ON"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-lto-thin
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-flto=thin"
        export DEBUG="ON"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-c11
  tags:
  - c11
  - debug-compile
  - special
  - stdflags
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export C_STD_VERSION="11"
        export DEBUG="ON"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-valgrind
  tags:
  - debug-compile
  - special
  - valgrind
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="OFF"
        export SSL="OPENSSL"
        export VALGRIND="ON"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-coverage
  tags:
  - coverage
  - debug-compile
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export COVERAGE="ON"
        export DEBUG="ON"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
  - func: upload coverage
- name: debug-compile-no-counters
  tags:
  - debug-compile
  - no-counters
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export ENABLE_SHM_COUNTERS="OFF"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-asan-clang
  tags:
  - asan-clang
  - debug-compile
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CC="clang-3.8"
        export CFLAGS="-fno-omit-frame-pointer"
        export CHECK_LOG="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF"
        export PATH="/usr/lib/llvm-3.8/bin:$PATH"
        export SANITIZE="address"
        export SNAPPY="OFF"
        export ZLIB="BUNDLED"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-asan-gcc
  tags:
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-pthread"
        export CHECK_LOG="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF"
        export SANITIZE="address"
        export SNAPPY="OFF"
        export ZLIB="BUNDLED"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-asan-clang-openssl
  tags:
  - asan-clang
  - debug-compile
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CC="clang-3.8"
        export CFLAGS="-fno-omit-frame-pointer"
        export CHECK_LOG="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF"
        export PATH="/usr/lib/llvm-3.8/bin:$PATH"
        export SANITIZE="address"
        export SNAPPY="OFF"
        export SSL="OPENSSL"
        export ZLIB="BUNDLED"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-ubsan
  tags:
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CC="clang-3.8"
        export CFLAGS="-fno-omit-frame-pointer -fno-sanitize-recover=alignment"
        export CHECK_LOG="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF"
        export PATH="/usr/lib/llvm-3.8/bin:$PATH"
        export SANITIZE="undefined"
        export SNAPPY="OFF"
        export ZLIB="BUNDLED"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-ubsan-with-extra-alignment
  tags:
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CC="clang-3.8"
        export CFLAGS="-fno-omit-frame-pointer -fno-sanitize-recover=alignment"
        export CHECK_LOG="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=ON"
        export PATH="/usr/lib/llvm-3.8/bin:$PATH"
        export SANITIZE="undefined"
        export SNAPPY="OFF"
        export ZLIB="BUNDLED"
        export ZSTD="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-scan-build
  tags:
  - clang
  - debug-compile
  - scan-build
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export ANALYZE="ON"
        export CC="clang"
        export DEBUG="ON"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
  - func: upload scan artifacts
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        if find scan -name \*.html | grep -q html; then
          exit 123
        fi
- name: compile-tracing
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-Werror -Wno-cast-align"
        export DEBUG="ON"
        export SANITIZE=""
        export TRACING="ON"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: release-compile
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export RELEASE="ON"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-nosasl-openssl
  tags:
  - debug-compile
  - nosasl
  - openssl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SSL="OPENSSL"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-nosasl-openssl-static
  tags:
  - debug-compile
  - nosasl
  - openssl-static
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SSL="OPENSSL_STATIC"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-nosasl-darwinssl
  tags:
  - darwinssl
  - debug-compile
  - nosasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SSL="DARWIN"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-nosasl-winssl
  tags:
  - debug-compile
  - nosasl
  - winssl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SSL="WINDOWS"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-nossl
  tags:
  - debug-compile
  - nossl
  - sasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="AUTO"
        export SSL="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-openssl
  tags:
  - debug-compile
  - openssl
  - sasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="AUTO"
        export SSL="OPENSSL"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-openssl-static
  tags:
  - debug-compile
  - openssl-static
  - sasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="AUTO"
        export SSL="OPENSSL_STATIC"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-darwinssl
  tags:
  - darwinssl
  - debug-compile
  - sasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="AUTO"
        export SSL="DARWIN"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-winssl
  tags:
  - debug-compile
  - sasl
  - winssl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="CYRUS"
        export SSL="WINDOWS"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sspi-nossl
  tags:
  - debug-compile
  - nossl
  - sspi
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="SSPI"
        export SSL="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sspi-openssl
  tags:
  - debug-compile
  - openssl
  - sspi
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="SSPI"
        export SSL="OPENSSL"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sspi-openssl-static
  tags:
  - debug-compile
  - openssl-static
  - sspi
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="SSPI"
        export SSL="OPENSSL_STATIC"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-rdtscp
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export ENABLE_RDTSCP="ON"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sspi-winssl
  tags:
  - debug-compile
  - sspi
  - winssl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="SSPI"
        export SSL="WINDOWS"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-nosrv
  tags:
  - debug-compile
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export SANITIZE=""
        export SRV="OFF"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: link-with-cmake
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
- name: link-with-cmake-ssl
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      ENABLE_SSL: 1
- name: link-with-cmake-snappy
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      ENABLE_SNAPPY: 1
- name: link-with-cmake-mac
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
- name: link-with-cmake-deprecated
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      BUILD_SAMPLE_WITH_CMAKE_DEPRECATED: 1
- name: link-with-cmake-ssl-deprecated
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      BUILD_SAMPLE_WITH_CMAKE_DEPRECATED: 1
      ENABLE_SSL: 1
- name: link-with-cmake-snappy-deprecated
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      BUILD_SAMPLE_WITH_CMAKE_DEPRECATED: 1
      ENABLE_SNAPPY: 1
- name: link-with-cmake-mac-deprecated
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      BUILD_SAMPLE_WITH_CMAKE_DEPRECATED: 1
- name: link-with-cmake-windows
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program MSVC
- name: link-with-cmake-windows-ssl
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      SSL: 1
      VERSION: latest
  - func: link sample program MSVC
    vars:
      ENABLE_SSL: 1
- name: link-with-cmake-windows-snappy
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program MSVC
    vars:
      ENABLE_SNAPPY: 1
- name: link-with-cmake-mingw
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program mingw
- name: link-with-pkg-config
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
- name: link-with-pkg-config-mac
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
- name: link-with-pkg-config-ssl
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: bootstrap mongo-orchestration
    vars:
      VERSION: latest
  - func: link sample program
    vars:
      ENABLE_SSL: 1
- name: link-with-bson
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: link sample program bson
- name: link-with-bson-mac
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: link sample program bson
- name: link-with-bson-windows
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: link sample program MSVC bson
- name: link-with-bson-mingw
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - func: link sample program mingw bson
- name: debian-package-build
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export IS_PATCH="${is_patch}"
        sh .evergreen/debian_package_build.sh
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/mongo-c-driver-debian-packages-${CURRENT_VERSION}.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: deb.tar.gz
      content_type: ${content_type|application/x-gzip}
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/mongo-c-driver-debian-packages.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: deb.tar.gz
      content_type: ${content_type|application/x-gzip}
- name: rpm-package-build
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        sh .evergreen/build_snapshot_rpm.sh
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/mongo-c-driver-rpm-packages-${CURRENT_VERSION}.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: rpm.tar.gz
      content_type: ${content_type|application/x-gzip}
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/mongo-c-driver-rpm-packages.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: rpm.tar.gz
      content_type: ${content_type|application/x-gzip}
- name: install-uninstall-check-mingw
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CC="C:/mingw-w64/x86_64-4.9.1-posix-seh-rt_v3-rev1/mingw64/bin/gcc.exe"
        BSON_ONLY=1 cmd.exe /c .\\.evergreen\\install-uninstall-check-windows.cmd
        cmd.exe /c .\\.evergreen\\install-uninstall-check-windows.cmd
- name: install-uninstall-check-msvc
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CC="Visual Studio 14 2015 Win64"
        BSON_ONLY=1 cmd.exe /c .\\.evergreen\\install-uninstall-check-windows.cmd
        cmd.exe /c .\\.evergreen\\install-uninstall-check-windows.cmd
- name: install-uninstall-check
  depends_on:
    name: make-release-archive
    variant: releng
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        DESTDIR="$(pwd)/dest" sh ./.evergreen/install-uninstall-check.sh
        BSON_ONLY=1 sh ./.evergreen/install-uninstall-check.sh
        sh ./.evergreen/install-uninstall-check.sh
- name: debug-compile-with-warnings
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-Werror -Wno-cast-align"
        export DEBUG="ON"
        export SANITIZE=""
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-openssl-cse
  tags:
  - client-side-encryption
  - debug-compile
  - openssl
  - sasl
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_MONGOC=OFF"
        export SANITIZE=""
        export SASL="AUTO"
        export SKIP_MOCK_TESTS="ON"
        export SSL="OPENSSL"
        export USE_CRYPT_SHARED="${USE_CRYPT_SHARED}"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
        rm CMakeCache.txt
        set -o errexit
        export COMPILE_LIBMONGOCRYPT="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_CLIENT_SIDE_ENCRYPTION=ON"
        export SANITIZE=""
        export SASL="AUTO"
        export SSL="OPENSSL"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-openssl-static-cse
  tags:
  - client-side-encryption
  - debug-compile
  - openssl-static
  - sasl
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_MONGOC=OFF"
        export SANITIZE=""
        export SASL="AUTO"
        export SKIP_MOCK_TESTS="ON"
        export SSL="OPENSSL_STATIC"
        export USE_CRYPT_SHARED="${USE_CRYPT_SHARED}"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
        rm CMakeCache.txt
        set -o errexit
        export COMPILE_LIBMONGOCRYPT="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_CLIENT_SIDE_ENCRYPTION=ON"
        export SANITIZE=""
        export SASL="AUTO"
        export SSL="OPENSSL_STATIC"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-darwinssl-cse
  tags:
  - client-side-encryption
  - darwinssl
  - debug-compile
  - sasl
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_MONGOC=OFF"
        export SANITIZE=""
        export SASL="AUTO"
        export SKIP_MOCK_TESTS="ON"
        export SSL="DARWIN"
        export USE_CRYPT_SHARED="${USE_CRYPT_SHARED}"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
        rm CMakeCache.txt
        set -o errexit
        export COMPILE_LIBMONGOCRYPT="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_CLIENT_SIDE_ENCRYPTION=ON"
        export SANITIZE=""
        export SASL="AUTO"
        export SSL="DARWIN"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-sasl-winssl-cse
  tags:
  - client-side-encryption
  - debug-compile
  - sasl
  - special
  - winssl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_MONGOC=OFF"
        export SANITIZE=""
        export SASL="AUTO"
        export SKIP_MOCK_TESTS="ON"
        export SSL="WINDOWS"
        export USE_CRYPT_SHARED="${USE_CRYPT_SHARED}"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
        rm CMakeCache.txt
        set -o errexit
        export COMPILE_LIBMONGOCRYPT="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_CLIENT_SIDE_ENCRYPTION=ON"
        export SANITIZE=""
        export SASL="AUTO"
        export SSL="WINDOWS"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-asan-openssl-cse
  tags:
  - asan-clang
  - client-side-encryption
  - debug-compile
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-fno-omit-frame-pointer"
        export CHECK_LOG="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON -DENABLE_MONGOC=OFF -DENABLE_EXTRA_ALIGNMENT=OFF"
        export PATH="/usr/lib/llvm-3.8/bin:$PATH"
        export SANITIZE="address"
        export SKIP_MOCK_TESTS="ON"
        export SSL="OPENSSL"
        export USE_CRYPT_SHARED="${USE_CRYPT_SHARED}"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
        rm CMakeCache.txt
        set -o errexit
        export CFLAGS="-fno-omit-frame-pointer"
        export CHECK_LOG="ON"
        export COMPILE_LIBMONGOCRYPT="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_CLIENT_SIDE_ENCRYPTION=ON -DENABLE_EXTRA_ALIGNMENT=OFF"
        export PATH="/usr/lib/llvm-3.8/bin:$PATH"
        export SANITIZE="address"
        export SSL="OPENSSL"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.1u
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-Wno-redundant-decls"
        export DEBUG="ON"
        export SANITIZE=""
        export SASL="OFF"
        export SSL="OPENSSL"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: debug-compile-tsan-openssl
  tags:
  - special
  - tsan
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS="-fno-omit-frame-pointer"
        export CHECK_LOG="ON"
        export DEBUG="ON"
        export EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF -DENABLE_SHM_COUNTERS=OFF"
        export SANITIZE="thread"
        export SSL="OPENSSL"
        CC='${CC}' MARCH='${MARCH}' sh .evergreen/compile.sh
  - func: upload build
- name: build-and-test-with-toolchain
  commands:
  - command: s3.get
    params:
      aws_key: ${toolchain_aws_key}
      aws_secret: ${toolchain_aws_secret}
      remote_file: mongo-c-toolchain/${distro_id}/mongo-c-toolchain.tar.gz
      bucket: mongo-c-toolchain
      local_file: mongo-c-toolchain.tar.gz
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        sh ./.evergreen/build-and-test-with-toolchain.sh
- name: test-valgrind-latest-server-auth-nosasl-openssl
  tags:
  - latest
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-latest-server-noauth-nosasl-nossl
  tags:
  - latest
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-latest-replica-set-auth-nosasl-openssl
  tags:
  - latest
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-latest-replica-set-noauth-nosasl-nossl
  tags:
  - latest
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-latest-sharded-auth-nosasl-openssl
  tags:
  - latest
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-latest-sharded-noauth-nosasl-nossl
  tags:
  - latest
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-6.0-server-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-6.0-server-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-6.0-replica-set-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-6.0-replica-set-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-6.0-sharded-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-6.0-sharded-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-5.0-server-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-5.0-server-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-5.0-replica-set-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-5.0-replica-set-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-5.0-sharded-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-5.0-sharded-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.4-server-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.4-server-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.4-replica-set-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.4-replica-set-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.4-sharded-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.4-sharded-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.2-server-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.2-server-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.2-replica-set-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.2-replica-set-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.2-sharded-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.2-sharded-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.0-server-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.0-server-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.0-replica-set-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.0-replica-set-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-4.0-sharded-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-4.0-sharded-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-3.6-server-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-3.6-server-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-3.6-replica-set-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-3.6-replica-set-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-valgrind-3.6-sharded-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'on'
- name: test-valgrind-3.6-sharded-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-valgrind
  exec_timeout_secs: 14400
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'on'
- name: test-asan-latest-server-auth-nosasl-openssl-cse
  tags:
  - client-side-encryption
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-latest-server-auth-nosasl-openssl
  tags:
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-latest-server-noauth-nosasl-nossl
  tags:
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-latest-replica-set-auth-nosasl-openssl-cse
  tags:
  - client-side-encryption
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-latest-replica-set-auth-nosasl-openssl
  tags:
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-latest-replica-set-noauth-nosasl-nossl
  tags:
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-latest-sharded-auth-nosasl-openssl
  tags:
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-latest-sharded-noauth-nosasl-nossl
  tags:
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-6.0-server-auth-nosasl-openssl-cse
  tags:
  - '6.0'
  - client-side-encryption
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-6.0-server-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-6.0-server-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-6.0-replica-set-auth-nosasl-openssl-cse
  tags:
  - '6.0'
  - client-side-encryption
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-6.0-replica-set-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-6.0-replica-set-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-6.0-sharded-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-6.0-sharded-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-5.0-server-auth-nosasl-openssl-cse
  tags:
  - '5.0'
  - client-side-encryption
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-5.0-server-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-5.0-server-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-5.0-replica-set-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-5.0-replica-set-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-5.0-sharded-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-5.0-sharded-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.4-server-auth-nosasl-openssl-cse
  tags:
  - '4.4'
  - client-side-encryption
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.4-server-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.4-server-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.4-replica-set-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.4-replica-set-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.4-sharded-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.4-sharded-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.2-server-auth-nosasl-openssl-cse
  tags:
  - '4.2'
  - client-side-encryption
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.2-server-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.2-server-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.2-replica-set-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.2-replica-set-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.2-sharded-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.2-sharded-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.0-server-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.0-server-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.0-replica-set-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.0-replica-set-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-4.0-sharded-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-4.0-sharded-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-3.6-server-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-3.6-server-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-3.6-replica-set-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-3.6-replica-set-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-asan-3.6-sharded-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-asan-3.6-sharded-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-tsan-latest-server-auth-nosasl-openssl
  tags:
  - latest
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-latest-server-noauth-nosasl-openssl
  tags:
  - latest
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-latest-replica-set-auth-nosasl-openssl
  tags:
  - latest
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-latest-replica-set-noauth-nosasl-openssl
  tags:
  - latest
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-latest-sharded-auth-nosasl-openssl
  tags:
  - latest
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-latest-sharded-noauth-nosasl-openssl
  tags:
  - latest
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-6.0-server-auth-nosasl-openssl
  tags:
  - '6.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-6.0-server-noauth-nosasl-openssl
  tags:
  - '6.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-6.0-replica-set-auth-nosasl-openssl
  tags:
  - '6.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-6.0-replica-set-noauth-nosasl-openssl
  tags:
  - '6.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-6.0-sharded-auth-nosasl-openssl
  tags:
  - '6.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-6.0-sharded-noauth-nosasl-openssl
  tags:
  - '6.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-5.0-server-auth-nosasl-openssl
  tags:
  - '5.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-5.0-server-noauth-nosasl-openssl
  tags:
  - '5.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-5.0-replica-set-auth-nosasl-openssl
  tags:
  - '5.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-5.0-replica-set-noauth-nosasl-openssl
  tags:
  - '5.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-5.0-sharded-auth-nosasl-openssl
  tags:
  - '5.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-5.0-sharded-noauth-nosasl-openssl
  tags:
  - '5.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.4-server-auth-nosasl-openssl
  tags:
  - '4.4'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.4-server-noauth-nosasl-openssl
  tags:
  - '4.4'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.4-replica-set-auth-nosasl-openssl
  tags:
  - '4.4'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.4-replica-set-noauth-nosasl-openssl
  tags:
  - '4.4'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.4-sharded-auth-nosasl-openssl
  tags:
  - '4.4'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.4-sharded-noauth-nosasl-openssl
  tags:
  - '4.4'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.2-server-auth-nosasl-openssl
  tags:
  - '4.2'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.2-server-noauth-nosasl-openssl
  tags:
  - '4.2'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.2-replica-set-auth-nosasl-openssl
  tags:
  - '4.2'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.2-replica-set-noauth-nosasl-openssl
  tags:
  - '4.2'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.2-sharded-auth-nosasl-openssl
  tags:
  - '4.2'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.2-sharded-noauth-nosasl-openssl
  tags:
  - '4.2'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.0-server-auth-nosasl-openssl
  tags:
  - '4.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.0-server-noauth-nosasl-openssl
  tags:
  - '4.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.0-replica-set-auth-nosasl-openssl
  tags:
  - '4.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.0-replica-set-noauth-nosasl-openssl
  tags:
  - '4.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.0-sharded-auth-nosasl-openssl
  tags:
  - '4.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-4.0-sharded-noauth-nosasl-openssl
  tags:
  - '4.0'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-3.6-server-auth-nosasl-openssl
  tags:
  - '3.6'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-3.6-server-noauth-nosasl-openssl
  tags:
  - '3.6'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-3.6-replica-set-auth-nosasl-openssl
  tags:
  - '3.6'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-3.6-replica-set-noauth-nosasl-openssl
  tags:
  - '3.6'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-3.6-sharded-auth-nosasl-openssl
  tags:
  - '3.6'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-tsan-3.6-sharded-noauth-nosasl-openssl
  tags:
  - '3.6'
  - tsan
  depends_on:
    name: debug-compile-tsan-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-tsan-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-coverage-latest-server-auth-nosasl-openssl
  tags:
  - latest
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-latest-server-noauth-nosasl-nossl
  tags:
  - latest
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-latest-replica-set-auth-nosasl-openssl
  tags:
  - latest
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-latest-replica-set-noauth-nosasl-nossl
  tags:
  - latest
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-latest-sharded-auth-nosasl-openssl
  tags:
  - latest
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-latest-sharded-noauth-nosasl-nossl
  tags:
  - latest
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-6.0-server-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-6.0-server-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-6.0-replica-set-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-6.0-replica-set-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-6.0-sharded-auth-nosasl-openssl
  tags:
  - '6.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-6.0-sharded-noauth-nosasl-nossl
  tags:
  - '6.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-5.0-server-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-5.0-server-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-5.0-replica-set-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-5.0-replica-set-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-5.0-sharded-auth-nosasl-openssl
  tags:
  - '5.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-5.0-sharded-noauth-nosasl-nossl
  tags:
  - '5.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.4-server-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.4-server-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.4-replica-set-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.4-replica-set-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.4-sharded-auth-nosasl-openssl
  tags:
  - '4.4'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.4-sharded-noauth-nosasl-nossl
  tags:
  - '4.4'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.2-server-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.2-server-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.2-replica-set-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.2-replica-set-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.2-sharded-auth-nosasl-openssl
  tags:
  - '4.2'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.2-sharded-noauth-nosasl-nossl
  tags:
  - '4.2'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.0-server-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.0-server-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.0-replica-set-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.0-replica-set-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.0-sharded-auth-nosasl-openssl
  tags:
  - '4.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-4.0-sharded-noauth-nosasl-nossl
  tags:
  - '4.0'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-3.6-server-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-3.6-server-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-3.6-replica-set-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-3.6-replica-set-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-3.6-sharded-auth-nosasl-openssl
  tags:
  - '3.6'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-coverage-3.6-sharded-noauth-nosasl-nossl
  tags:
  - '3.6'
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
  - func: update codecov.io
- name: test-latest-server-auth-sasl-openssl-cse
  tags:
  - auth
  - client-side-encryption
  - latest
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-server-auth-sasl-openssl
  tags:
  - auth
  - latest
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-server-auth-sasl-openssl-static-cse
  tags:
  - auth
  - client-side-encryption
  - latest
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-server-auth-sasl-openssl-static
  tags:
  - auth
  - latest
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-server-auth-sasl-darwinssl-cse
  tags:
  - auth
  - client-side-encryption
  - darwinssl
  - latest
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-server-auth-sasl-darwinssl
  tags:
  - auth
  - darwinssl
  - latest
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-server-auth-sasl-winssl-cse
  tags:
  - auth
  - client-side-encryption
  - latest
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-server-auth-sasl-winssl
  tags:
  - auth
  - latest
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-server-auth-sspi-winssl
  tags:
  - auth
  - latest
  - server
  - sspi
  - winssl
  depends_on:
    name: debug-compile-sspi-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sspi-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-server-auth-nosasl-openssl
  tags:
  - auth
  - latest
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-server-auth-nosasl-openssl-static
  tags:
  - auth
  - latest
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-server-auth-nosasl-darwinssl
  tags:
  - auth
  - darwinssl
  - latest
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-server-auth-nosasl-winssl
  tags:
  - auth
  - latest
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-sasl-openssl-cse
  tags:
  - client-side-encryption
  - latest
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-sasl-openssl
  tags:
  - latest
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-sasl-openssl-static-cse
  tags:
  - client-side-encryption
  - latest
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-server-noauth-sasl-openssl-static
  tags:
  - latest
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-server-noauth-sasl-darwinssl-cse
  tags:
  - client-side-encryption
  - darwinssl
  - latest
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-sasl-darwinssl
  tags:
  - darwinssl
  - latest
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-sasl-winssl-cse
  tags:
  - client-side-encryption
  - latest
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-sasl-winssl
  tags:
  - latest
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-nosasl-openssl
  tags:
  - latest
  - noauth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-nosasl-openssl-static
  tags:
  - latest
  - noauth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-server-noauth-nosasl-darwinssl
  tags:
  - darwinssl
  - latest
  - noauth
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-nosasl-winssl
  tags:
  - latest
  - noauth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-server-noauth-nosasl-nossl
  tags:
  - latest
  - noauth
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-sasl-openssl-cse
  tags:
  - auth
  - client-side-encryption
  - latest
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-sasl-openssl
  tags:
  - auth
  - latest
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-sasl-openssl-static-cse
  tags:
  - auth
  - client-side-encryption
  - latest
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-sasl-openssl-static
  tags:
  - auth
  - latest
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-sasl-darwinssl-cse
  tags:
  - auth
  - client-side-encryption
  - darwinssl
  - latest
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-sasl-darwinssl
  tags:
  - auth
  - darwinssl
  - latest
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-sasl-winssl-cse
  tags:
  - auth
  - client-side-encryption
  - latest
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-sasl-winssl
  tags:
  - auth
  - latest
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-nosasl-openssl
  tags:
  - auth
  - latest
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-nosasl-openssl-static
  tags:
  - auth
  - latest
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-nosasl-darwinssl
  tags:
  - auth
  - darwinssl
  - latest
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-replica-set-auth-nosasl-winssl
  tags:
  - auth
  - latest
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-sasl-openssl-cse
  tags:
  - client-side-encryption
  - latest
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-sasl-openssl
  tags:
  - latest
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-sasl-openssl-static-cse
  tags:
  - client-side-encryption
  - latest
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-sasl-openssl-static
  tags:
  - latest
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-sasl-darwinssl-cse
  tags:
  - client-side-encryption
  - darwinssl
  - latest
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-sasl-darwinssl
  tags:
  - darwinssl
  - latest
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-sasl-winssl-cse
  tags:
  - client-side-encryption
  - latest
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-sasl-winssl
  tags:
  - latest
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-nosasl-openssl
  tags:
  - latest
  - noauth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-nosasl-openssl-static
  tags:
  - latest
  - noauth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-nosasl-darwinssl
  tags:
  - darwinssl
  - latest
  - noauth
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-nosasl-winssl
  tags:
  - latest
  - noauth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-replica-set-noauth-nosasl-nossl
  tags:
  - latest
  - noauth
  - nosasl
  - nossl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-latest-sharded-auth-sasl-openssl
  tags:
  - auth
  - latest
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-sharded-auth-sasl-openssl-static
  tags:
  - auth
  - latest
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-sharded-auth-sasl-darwinssl
  tags:
  - auth
  - darwinssl
  - latest
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-sharded-auth-sasl-winssl
  tags:
  - auth
  - latest
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-sharded-auth-nosasl-openssl
  tags:
  - auth
  - latest
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-sharded-auth-nosasl-openssl-static
  tags:
  - auth
  - latest
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-sharded-auth-nosasl-darwinssl
  tags:
  - auth
  - darwinssl
  - latest
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-sharded-auth-nosasl-winssl
  tags:
  - auth
  - latest
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-sasl-openssl
  tags:
  - latest
  - noauth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-sasl-openssl-static
  tags:
  - latest
  - noauth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-sasl-darwinssl
  tags:
  - darwinssl
  - latest
  - noauth
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-sasl-winssl
  tags:
  - latest
  - noauth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-nosasl-openssl
  tags:
  - latest
  - noauth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-nosasl-openssl-static
  tags:
  - latest
  - noauth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-nosasl-darwinssl
  tags:
  - darwinssl
  - latest
  - noauth
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-nosasl-winssl
  tags:
  - latest
  - noauth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-latest-sharded-noauth-nosasl-nossl
  tags:
  - latest
  - noauth
  - nosasl
  - nossl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-6.0-server-auth-sasl-openssl-cse
  tags:
  - '6.0'
  - auth
  - client-side-encryption
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-server-auth-sasl-openssl
  tags:
  - '6.0'
  - auth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-server-auth-sasl-openssl-static-cse
  tags:
  - '6.0'
  - auth
  - client-side-encryption
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-server-auth-sasl-openssl-static
  tags:
  - '6.0'
  - auth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-server-auth-sasl-darwinssl-cse
  tags:
  - '6.0'
  - auth
  - client-side-encryption
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-server-auth-sasl-darwinssl
  tags:
  - '6.0'
  - auth
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-server-auth-sasl-winssl-cse
  tags:
  - '6.0'
  - auth
  - client-side-encryption
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-server-auth-sasl-winssl
  tags:
  - '6.0'
  - auth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-server-auth-nosasl-openssl
  tags:
  - '6.0'
  - auth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-server-auth-nosasl-openssl-static
  tags:
  - '6.0'
  - auth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-server-auth-nosasl-darwinssl
  tags:
  - '6.0'
  - auth
  - darwinssl
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-server-auth-nosasl-winssl
  tags:
  - '6.0'
  - auth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-sasl-openssl-cse
  tags:
  - '6.0'
  - client-side-encryption
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-sasl-openssl
  tags:
  - '6.0'
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-sasl-openssl-static-cse
  tags:
  - '6.0'
  - client-side-encryption
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-server-noauth-sasl-openssl-static
  tags:
  - '6.0'
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-server-noauth-sasl-darwinssl-cse
  tags:
  - '6.0'
  - client-side-encryption
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-sasl-darwinssl
  tags:
  - '6.0'
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-sasl-winssl-cse
  tags:
  - '6.0'
  - client-side-encryption
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-sasl-winssl
  tags:
  - '6.0'
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-nosasl-openssl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-nosasl-openssl-static
  tags:
  - '6.0'
  - noauth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-server-noauth-nosasl-darwinssl
  tags:
  - '6.0'
  - darwinssl
  - noauth
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-nosasl-winssl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-server-noauth-nosasl-nossl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-sasl-openssl-cse
  tags:
  - '6.0'
  - auth
  - client-side-encryption
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-sasl-openssl
  tags:
  - '6.0'
  - auth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-sasl-openssl-static-cse
  tags:
  - '6.0'
  - auth
  - client-side-encryption
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-sasl-openssl-static
  tags:
  - '6.0'
  - auth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-sasl-darwinssl-cse
  tags:
  - '6.0'
  - auth
  - client-side-encryption
  - darwinssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-sasl-darwinssl
  tags:
  - '6.0'
  - auth
  - darwinssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-sasl-winssl-cse
  tags:
  - '6.0'
  - auth
  - client-side-encryption
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-sasl-winssl
  tags:
  - '6.0'
  - auth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-nosasl-openssl
  tags:
  - '6.0'
  - auth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-nosasl-openssl-static
  tags:
  - '6.0'
  - auth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-nosasl-darwinssl
  tags:
  - '6.0'
  - auth
  - darwinssl
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-auth-nosasl-winssl
  tags:
  - '6.0'
  - auth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-sasl-openssl-cse
  tags:
  - '6.0'
  - client-side-encryption
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-sasl-openssl
  tags:
  - '6.0'
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-sasl-openssl-static-cse
  tags:
  - '6.0'
  - client-side-encryption
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-sasl-openssl-static
  tags:
  - '6.0'
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-sasl-darwinssl-cse
  tags:
  - '6.0'
  - client-side-encryption
  - darwinssl
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-sasl-darwinssl
  tags:
  - '6.0'
  - darwinssl
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-sasl-winssl-cse
  tags:
  - '6.0'
  - client-side-encryption
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-sasl-winssl
  tags:
  - '6.0'
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-nosasl-openssl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-nosasl-openssl-static
  tags:
  - '6.0'
  - noauth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-nosasl-darwinssl
  tags:
  - '6.0'
  - darwinssl
  - noauth
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-nosasl-winssl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-replica-set-noauth-nosasl-nossl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - nossl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-6.0-sharded-auth-sasl-openssl
  tags:
  - '6.0'
  - auth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-sharded-auth-sasl-openssl-static
  tags:
  - '6.0'
  - auth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-sharded-auth-sasl-darwinssl
  tags:
  - '6.0'
  - auth
  - darwinssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-sharded-auth-sasl-winssl
  tags:
  - '6.0'
  - auth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-sharded-auth-nosasl-openssl
  tags:
  - '6.0'
  - auth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-sharded-auth-nosasl-openssl-static
  tags:
  - '6.0'
  - auth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-sharded-auth-nosasl-darwinssl
  tags:
  - '6.0'
  - auth
  - darwinssl
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-sharded-auth-nosasl-winssl
  tags:
  - '6.0'
  - auth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-sasl-openssl
  tags:
  - '6.0'
  - noauth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-sasl-openssl-static
  tags:
  - '6.0'
  - noauth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-sasl-darwinssl
  tags:
  - '6.0'
  - darwinssl
  - noauth
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-sasl-winssl
  tags:
  - '6.0'
  - noauth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-nosasl-openssl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-nosasl-openssl-static
  tags:
  - '6.0'
  - noauth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-nosasl-darwinssl
  tags:
  - '6.0'
  - darwinssl
  - noauth
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-nosasl-winssl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-6.0-sharded-noauth-nosasl-nossl
  tags:
  - '6.0'
  - noauth
  - nosasl
  - nossl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '6.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-5.0-server-auth-sasl-openssl-cse
  tags:
  - '5.0'
  - auth
  - client-side-encryption
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-server-auth-sasl-openssl
  tags:
  - '5.0'
  - auth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-server-auth-sasl-openssl-static-cse
  tags:
  - '5.0'
  - auth
  - client-side-encryption
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-server-auth-sasl-openssl-static
  tags:
  - '5.0'
  - auth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-server-auth-sasl-darwinssl-cse
  tags:
  - '5.0'
  - auth
  - client-side-encryption
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-server-auth-sasl-darwinssl
  tags:
  - '5.0'
  - auth
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-server-auth-sasl-winssl-cse
  tags:
  - '5.0'
  - auth
  - client-side-encryption
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-server-auth-sasl-winssl
  tags:
  - '5.0'
  - auth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-server-auth-nosasl-openssl
  tags:
  - '5.0'
  - auth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-server-auth-nosasl-openssl-static
  tags:
  - '5.0'
  - auth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-server-auth-nosasl-darwinssl
  tags:
  - '5.0'
  - auth
  - darwinssl
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-server-auth-nosasl-winssl
  tags:
  - '5.0'
  - auth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-sasl-openssl-cse
  tags:
  - '5.0'
  - client-side-encryption
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-sasl-openssl
  tags:
  - '5.0'
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-sasl-openssl-static-cse
  tags:
  - '5.0'
  - client-side-encryption
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-server-noauth-sasl-openssl-static
  tags:
  - '5.0'
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-server-noauth-sasl-darwinssl-cse
  tags:
  - '5.0'
  - client-side-encryption
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-sasl-darwinssl
  tags:
  - '5.0'
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-sasl-winssl-cse
  tags:
  - '5.0'
  - client-side-encryption
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-sasl-winssl
  tags:
  - '5.0'
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-nosasl-openssl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-nosasl-openssl-static
  tags:
  - '5.0'
  - noauth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-server-noauth-nosasl-darwinssl
  tags:
  - '5.0'
  - darwinssl
  - noauth
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-nosasl-winssl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-server-noauth-nosasl-nossl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-5.0-replica-set-auth-sasl-openssl
  tags:
  - '5.0'
  - auth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-auth-sasl-openssl-static
  tags:
  - '5.0'
  - auth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-replica-set-auth-sasl-darwinssl
  tags:
  - '5.0'
  - auth
  - darwinssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-auth-sasl-winssl
  tags:
  - '5.0'
  - auth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-auth-nosasl-openssl
  tags:
  - '5.0'
  - auth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-auth-nosasl-openssl-static
  tags:
  - '5.0'
  - auth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-replica-set-auth-nosasl-darwinssl
  tags:
  - '5.0'
  - auth
  - darwinssl
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-auth-nosasl-winssl
  tags:
  - '5.0'
  - auth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-sasl-openssl
  tags:
  - '5.0'
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-sasl-openssl-static
  tags:
  - '5.0'
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-sasl-darwinssl
  tags:
  - '5.0'
  - darwinssl
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-sasl-winssl
  tags:
  - '5.0'
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-nosasl-openssl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-nosasl-openssl-static
  tags:
  - '5.0'
  - noauth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-nosasl-darwinssl
  tags:
  - '5.0'
  - darwinssl
  - noauth
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-nosasl-winssl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-replica-set-noauth-nosasl-nossl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - nossl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-5.0-sharded-auth-sasl-openssl
  tags:
  - '5.0'
  - auth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-sharded-auth-sasl-openssl-static
  tags:
  - '5.0'
  - auth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-sharded-auth-sasl-darwinssl
  tags:
  - '5.0'
  - auth
  - darwinssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-sharded-auth-sasl-winssl
  tags:
  - '5.0'
  - auth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-sharded-auth-nosasl-openssl
  tags:
  - '5.0'
  - auth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-sharded-auth-nosasl-openssl-static
  tags:
  - '5.0'
  - auth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-sharded-auth-nosasl-darwinssl
  tags:
  - '5.0'
  - auth
  - darwinssl
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-sharded-auth-nosasl-winssl
  tags:
  - '5.0'
  - auth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-sasl-openssl
  tags:
  - '5.0'
  - noauth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-sasl-openssl-static
  tags:
  - '5.0'
  - noauth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-sasl-darwinssl
  tags:
  - '5.0'
  - darwinssl
  - noauth
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-sasl-winssl
  tags:
  - '5.0'
  - noauth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-nosasl-openssl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-nosasl-openssl-static
  tags:
  - '5.0'
  - noauth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-nosasl-darwinssl
  tags:
  - '5.0'
  - darwinssl
  - noauth
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-nosasl-winssl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-5.0-sharded-noauth-nosasl-nossl
  tags:
  - '5.0'
  - noauth
  - nosasl
  - nossl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.4-server-auth-sasl-openssl-cse
  tags:
  - '4.4'
  - auth
  - client-side-encryption
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-server-auth-sasl-openssl
  tags:
  - '4.4'
  - auth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-server-auth-sasl-openssl-static-cse
  tags:
  - '4.4'
  - auth
  - client-side-encryption
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-server-auth-sasl-openssl-static
  tags:
  - '4.4'
  - auth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-server-auth-sasl-darwinssl-cse
  tags:
  - '4.4'
  - auth
  - client-side-encryption
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-server-auth-sasl-darwinssl
  tags:
  - '4.4'
  - auth
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-server-auth-sasl-winssl-cse
  tags:
  - '4.4'
  - auth
  - client-side-encryption
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-server-auth-sasl-winssl
  tags:
  - '4.4'
  - auth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-server-auth-nosasl-openssl
  tags:
  - '4.4'
  - auth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-server-auth-nosasl-openssl-static
  tags:
  - '4.4'
  - auth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-server-auth-nosasl-darwinssl
  tags:
  - '4.4'
  - auth
  - darwinssl
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-server-auth-nosasl-winssl
  tags:
  - '4.4'
  - auth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-sasl-openssl-cse
  tags:
  - '4.4'
  - client-side-encryption
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-sasl-openssl
  tags:
  - '4.4'
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-sasl-openssl-static-cse
  tags:
  - '4.4'
  - client-side-encryption
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-server-noauth-sasl-openssl-static
  tags:
  - '4.4'
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-server-noauth-sasl-darwinssl-cse
  tags:
  - '4.4'
  - client-side-encryption
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-sasl-darwinssl
  tags:
  - '4.4'
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-sasl-winssl-cse
  tags:
  - '4.4'
  - client-side-encryption
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-sasl-winssl
  tags:
  - '4.4'
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-nosasl-openssl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-nosasl-openssl-static
  tags:
  - '4.4'
  - noauth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-server-noauth-nosasl-darwinssl
  tags:
  - '4.4'
  - darwinssl
  - noauth
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-nosasl-winssl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-server-noauth-nosasl-nossl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.4-replica-set-auth-sasl-openssl
  tags:
  - '4.4'
  - auth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-auth-sasl-openssl-static
  tags:
  - '4.4'
  - auth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-replica-set-auth-sasl-darwinssl
  tags:
  - '4.4'
  - auth
  - darwinssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-auth-sasl-winssl
  tags:
  - '4.4'
  - auth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-auth-nosasl-openssl
  tags:
  - '4.4'
  - auth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-auth-nosasl-openssl-static
  tags:
  - '4.4'
  - auth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-replica-set-auth-nosasl-darwinssl
  tags:
  - '4.4'
  - auth
  - darwinssl
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-auth-nosasl-winssl
  tags:
  - '4.4'
  - auth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-sasl-openssl
  tags:
  - '4.4'
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-sasl-openssl-static
  tags:
  - '4.4'
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-sasl-darwinssl
  tags:
  - '4.4'
  - darwinssl
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-sasl-winssl
  tags:
  - '4.4'
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-nosasl-openssl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-nosasl-openssl-static
  tags:
  - '4.4'
  - noauth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-nosasl-darwinssl
  tags:
  - '4.4'
  - darwinssl
  - noauth
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-nosasl-winssl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-replica-set-noauth-nosasl-nossl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - nossl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.4-sharded-auth-sasl-openssl
  tags:
  - '4.4'
  - auth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-sharded-auth-sasl-openssl-static
  tags:
  - '4.4'
  - auth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-sharded-auth-sasl-darwinssl
  tags:
  - '4.4'
  - auth
  - darwinssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-sharded-auth-sasl-winssl
  tags:
  - '4.4'
  - auth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-sharded-auth-nosasl-openssl
  tags:
  - '4.4'
  - auth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-sharded-auth-nosasl-openssl-static
  tags:
  - '4.4'
  - auth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-sharded-auth-nosasl-darwinssl
  tags:
  - '4.4'
  - auth
  - darwinssl
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-sharded-auth-nosasl-winssl
  tags:
  - '4.4'
  - auth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-sasl-openssl
  tags:
  - '4.4'
  - noauth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-sasl-openssl-static
  tags:
  - '4.4'
  - noauth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-sasl-darwinssl
  tags:
  - '4.4'
  - darwinssl
  - noauth
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-sasl-winssl
  tags:
  - '4.4'
  - noauth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-nosasl-openssl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-nosasl-openssl-static
  tags:
  - '4.4'
  - noauth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-nosasl-darwinssl
  tags:
  - '4.4'
  - darwinssl
  - noauth
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-nosasl-winssl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.4-sharded-noauth-nosasl-nossl
  tags:
  - '4.4'
  - noauth
  - nosasl
  - nossl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.4'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.2-server-auth-sasl-openssl-cse
  tags:
  - '4.2'
  - auth
  - client-side-encryption
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-server-auth-sasl-openssl
  tags:
  - '4.2'
  - auth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-server-auth-sasl-openssl-static-cse
  tags:
  - '4.2'
  - auth
  - client-side-encryption
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-server-auth-sasl-openssl-static
  tags:
  - '4.2'
  - auth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-server-auth-sasl-darwinssl-cse
  tags:
  - '4.2'
  - auth
  - client-side-encryption
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-server-auth-sasl-darwinssl
  tags:
  - '4.2'
  - auth
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-server-auth-sasl-winssl-cse
  tags:
  - '4.2'
  - auth
  - client-side-encryption
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-server-auth-sasl-winssl
  tags:
  - '4.2'
  - auth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-server-auth-nosasl-openssl
  tags:
  - '4.2'
  - auth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-server-auth-nosasl-openssl-static
  tags:
  - '4.2'
  - auth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-server-auth-nosasl-darwinssl
  tags:
  - '4.2'
  - auth
  - darwinssl
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-server-auth-nosasl-winssl
  tags:
  - '4.2'
  - auth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-sasl-openssl-cse
  tags:
  - '4.2'
  - client-side-encryption
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-sasl-openssl
  tags:
  - '4.2'
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-sasl-openssl-static-cse
  tags:
  - '4.2'
  - client-side-encryption
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-server-noauth-sasl-openssl-static
  tags:
  - '4.2'
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-server-noauth-sasl-darwinssl-cse
  tags:
  - '4.2'
  - client-side-encryption
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-sasl-darwinssl
  tags:
  - '4.2'
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-sasl-winssl-cse
  tags:
  - '4.2'
  - client-side-encryption
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl-cse
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl-cse
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: clone drivers-evergreen-tools
  - func: run kms servers
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      CLIENT_SIDE_ENCRYPTION: 'on'
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-sasl-winssl
  tags:
  - '4.2'
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-nosasl-openssl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-nosasl-openssl-static
  tags:
  - '4.2'
  - noauth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-server-noauth-nosasl-darwinssl
  tags:
  - '4.2'
  - darwinssl
  - noauth
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-nosasl-winssl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-server-noauth-nosasl-nossl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.2-replica-set-auth-sasl-openssl
  tags:
  - '4.2'
  - auth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-auth-sasl-openssl-static
  tags:
  - '4.2'
  - auth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-replica-set-auth-sasl-darwinssl
  tags:
  - '4.2'
  - auth
  - darwinssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-auth-sasl-winssl
  tags:
  - '4.2'
  - auth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-auth-nosasl-openssl
  tags:
  - '4.2'
  - auth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-auth-nosasl-openssl-static
  tags:
  - '4.2'
  - auth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-replica-set-auth-nosasl-darwinssl
  tags:
  - '4.2'
  - auth
  - darwinssl
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-auth-nosasl-winssl
  tags:
  - '4.2'
  - auth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-sasl-openssl
  tags:
  - '4.2'
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-sasl-openssl-static
  tags:
  - '4.2'
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-sasl-darwinssl
  tags:
  - '4.2'
  - darwinssl
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-sasl-winssl
  tags:
  - '4.2'
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-nosasl-openssl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-nosasl-openssl-static
  tags:
  - '4.2'
  - noauth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-nosasl-darwinssl
  tags:
  - '4.2'
  - darwinssl
  - noauth
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-nosasl-winssl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-replica-set-noauth-nosasl-nossl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - nossl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.2-sharded-auth-sasl-openssl
  tags:
  - '4.2'
  - auth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-sharded-auth-sasl-openssl-static
  tags:
  - '4.2'
  - auth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-sharded-auth-sasl-darwinssl
  tags:
  - '4.2'
  - auth
  - darwinssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-sharded-auth-sasl-winssl
  tags:
  - '4.2'
  - auth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-sharded-auth-nosasl-openssl
  tags:
  - '4.2'
  - auth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-sharded-auth-nosasl-openssl-static
  tags:
  - '4.2'
  - auth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-sharded-auth-nosasl-darwinssl
  tags:
  - '4.2'
  - auth
  - darwinssl
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-sharded-auth-nosasl-winssl
  tags:
  - '4.2'
  - auth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-sasl-openssl
  tags:
  - '4.2'
  - noauth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-sasl-openssl-static
  tags:
  - '4.2'
  - noauth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-sasl-darwinssl
  tags:
  - '4.2'
  - darwinssl
  - noauth
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-sasl-winssl
  tags:
  - '4.2'
  - noauth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-nosasl-openssl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-nosasl-openssl-static
  tags:
  - '4.2'
  - noauth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-nosasl-darwinssl
  tags:
  - '4.2'
  - darwinssl
  - noauth
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-nosasl-winssl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.2-sharded-noauth-nosasl-nossl
  tags:
  - '4.2'
  - noauth
  - nosasl
  - nossl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.2'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.0-server-auth-sasl-openssl
  tags:
  - '4.0'
  - auth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-server-auth-sasl-openssl-static
  tags:
  - '4.0'
  - auth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-server-auth-sasl-darwinssl
  tags:
  - '4.0'
  - auth
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-server-auth-sasl-winssl
  tags:
  - '4.0'
  - auth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-server-auth-nosasl-openssl
  tags:
  - '4.0'
  - auth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-server-auth-nosasl-openssl-static
  tags:
  - '4.0'
  - auth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-server-auth-nosasl-darwinssl
  tags:
  - '4.0'
  - auth
  - darwinssl
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-server-auth-nosasl-winssl
  tags:
  - '4.0'
  - auth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-server-noauth-sasl-openssl
  tags:
  - '4.0'
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-server-noauth-sasl-openssl-static
  tags:
  - '4.0'
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-server-noauth-sasl-darwinssl
  tags:
  - '4.0'
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-server-noauth-sasl-winssl
  tags:
  - '4.0'
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-server-noauth-nosasl-openssl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-server-noauth-nosasl-openssl-static
  tags:
  - '4.0'
  - noauth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-server-noauth-nosasl-darwinssl
  tags:
  - '4.0'
  - darwinssl
  - noauth
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-server-noauth-nosasl-winssl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-server-noauth-nosasl-nossl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.0-replica-set-auth-sasl-openssl
  tags:
  - '4.0'
  - auth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-auth-sasl-openssl-static
  tags:
  - '4.0'
  - auth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-replica-set-auth-sasl-darwinssl
  tags:
  - '4.0'
  - auth
  - darwinssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-auth-sasl-winssl
  tags:
  - '4.0'
  - auth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-auth-nosasl-openssl
  tags:
  - '4.0'
  - auth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-auth-nosasl-openssl-static
  tags:
  - '4.0'
  - auth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-replica-set-auth-nosasl-darwinssl
  tags:
  - '4.0'
  - auth
  - darwinssl
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-auth-nosasl-winssl
  tags:
  - '4.0'
  - auth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-sasl-openssl
  tags:
  - '4.0'
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-sasl-openssl-static
  tags:
  - '4.0'
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-sasl-darwinssl
  tags:
  - '4.0'
  - darwinssl
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-sasl-winssl
  tags:
  - '4.0'
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-nosasl-openssl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-nosasl-openssl-static
  tags:
  - '4.0'
  - noauth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-nosasl-darwinssl
  tags:
  - '4.0'
  - darwinssl
  - noauth
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-nosasl-winssl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-replica-set-noauth-nosasl-nossl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - nossl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-4.0-sharded-auth-sasl-openssl
  tags:
  - '4.0'
  - auth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-sharded-auth-sasl-openssl-static
  tags:
  - '4.0'
  - auth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-sharded-auth-sasl-darwinssl
  tags:
  - '4.0'
  - auth
  - darwinssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-sharded-auth-sasl-winssl
  tags:
  - '4.0'
  - auth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-sharded-auth-nosasl-openssl
  tags:
  - '4.0'
  - auth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-sharded-auth-nosasl-openssl-static
  tags:
  - '4.0'
  - auth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-sharded-auth-nosasl-darwinssl
  tags:
  - '4.0'
  - auth
  - darwinssl
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-sharded-auth-nosasl-winssl
  tags:
  - '4.0'
  - auth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-sasl-openssl
  tags:
  - '4.0'
  - noauth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-sasl-openssl-static
  tags:
  - '4.0'
  - noauth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-sasl-darwinssl
  tags:
  - '4.0'
  - darwinssl
  - noauth
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-sasl-winssl
  tags:
  - '4.0'
  - noauth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-nosasl-openssl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-nosasl-openssl-static
  tags:
  - '4.0'
  - noauth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-nosasl-darwinssl
  tags:
  - '4.0'
  - darwinssl
  - noauth
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-nosasl-winssl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-4.0-sharded-noauth-nosasl-nossl
  tags:
  - '4.0'
  - noauth
  - nosasl
  - nossl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '4.0'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-3.6-server-auth-sasl-openssl
  tags:
  - '3.6'
  - auth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-server-auth-sasl-openssl-static
  tags:
  - '3.6'
  - auth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-server-auth-sasl-darwinssl
  tags:
  - '3.6'
  - auth
  - darwinssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-server-auth-sasl-winssl
  tags:
  - '3.6'
  - auth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-server-auth-nosasl-openssl
  tags:
  - '3.6'
  - auth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-server-auth-nosasl-openssl-static
  tags:
  - '3.6'
  - auth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-server-auth-nosasl-darwinssl
  tags:
  - '3.6'
  - auth
  - darwinssl
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-server-auth-nosasl-winssl
  tags:
  - '3.6'
  - auth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-server-noauth-sasl-openssl
  tags:
  - '3.6'
  - noauth
  - openssl
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-server-noauth-sasl-openssl-static
  tags:
  - '3.6'
  - noauth
  - openssl-static
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-server-noauth-sasl-darwinssl
  tags:
  - '3.6'
  - darwinssl
  - noauth
  - sasl
  - server
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-server-noauth-sasl-winssl
  tags:
  - '3.6'
  - noauth
  - sasl
  - server
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-server-noauth-nosasl-openssl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - openssl
  - server
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-server-noauth-nosasl-openssl-static
  tags:
  - '3.6'
  - noauth
  - nosasl
  - openssl-static
  - server
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-server-noauth-nosasl-darwinssl
  tags:
  - '3.6'
  - darwinssl
  - noauth
  - nosasl
  - server
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-server-noauth-nosasl-winssl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - server
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-server-noauth-nosasl-nossl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: server
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-3.6-replica-set-auth-sasl-openssl
  tags:
  - '3.6'
  - auth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-auth-sasl-openssl-static
  tags:
  - '3.6'
  - auth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-replica-set-auth-sasl-darwinssl
  tags:
  - '3.6'
  - auth
  - darwinssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-auth-sasl-winssl
  tags:
  - '3.6'
  - auth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-auth-nosasl-openssl
  tags:
  - '3.6'
  - auth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-auth-nosasl-openssl-static
  tags:
  - '3.6'
  - auth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-replica-set-auth-nosasl-darwinssl
  tags:
  - '3.6'
  - auth
  - darwinssl
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-auth-nosasl-winssl
  tags:
  - '3.6'
  - auth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-sasl-openssl
  tags:
  - '3.6'
  - noauth
  - openssl
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-sasl-openssl-static
  tags:
  - '3.6'
  - noauth
  - openssl-static
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-sasl-darwinssl
  tags:
  - '3.6'
  - darwinssl
  - noauth
  - replica_set
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-sasl-winssl
  tags:
  - '3.6'
  - noauth
  - replica_set
  - sasl
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-nosasl-openssl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - openssl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-nosasl-openssl-static
  tags:
  - '3.6'
  - noauth
  - nosasl
  - openssl-static
  - replica_set
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-nosasl-darwinssl
  tags:
  - '3.6'
  - darwinssl
  - noauth
  - nosasl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-nosasl-winssl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - replica_set
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-replica-set-noauth-nosasl-nossl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - nossl
  - replica_set
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: replica_set
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-3.6-sharded-auth-sasl-openssl
  tags:
  - '3.6'
  - auth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-sharded-auth-sasl-openssl-static
  tags:
  - '3.6'
  - auth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-sharded-auth-sasl-darwinssl
  tags:
  - '3.6'
  - auth
  - darwinssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-sharded-auth-sasl-winssl
  tags:
  - '3.6'
  - auth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-sharded-auth-nosasl-openssl
  tags:
  - '3.6'
  - auth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-sharded-auth-nosasl-openssl-static
  tags:
  - '3.6'
  - auth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-sharded-auth-nosasl-darwinssl
  tags:
  - '3.6'
  - auth
  - darwinssl
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-sharded-auth-nosasl-winssl
  tags:
  - '3.6'
  - auth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: auth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-sasl-openssl
  tags:
  - '3.6'
  - noauth
  - openssl
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-sasl-openssl-static
  tags:
  - '3.6'
  - noauth
  - openssl-static
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-sasl-darwinssl
  tags:
  - '3.6'
  - darwinssl
  - noauth
  - sasl
  - sharded_cluster
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-sasl-winssl
  tags:
  - '3.6'
  - noauth
  - sasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-sasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-nosasl-openssl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - openssl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-nosasl-openssl-static
  tags:
  - '3.6'
  - noauth
  - nosasl
  - openssl-static
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-static
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: openssl-static
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: openssl-static
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-nosasl-darwinssl
  tags:
  - '3.6'
  - darwinssl
  - noauth
  - nosasl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: darwinssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: darwinssl
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-nosasl-winssl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - sharded_cluster
  - winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: winssl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: winssl
      VALGRIND: 'off'
- name: test-3.6-sharded-noauth-nosasl-nossl
  tags:
  - '3.6'
  - noauth
  - nosasl
  - nossl
  - sharded_cluster
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '3.6'
  - func: run tests
    vars:
      ASAN: 'off'
      AUTH: noauth
      SSL: nossl
      VALGRIND: 'off'
- name: test-dns-openssl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: ssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      AUTH: noauth
      DNS: 'on'
      SSL: ssl
- name: test-dns-winssl
  depends_on:
    name: debug-compile-sspi-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sspi-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: ssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      AUTH: noauth
      DNS: 'on'
      SSL: ssl
- name: test-dns-darwinssl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: ssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      AUTH: noauth
      DNS: 'on'
      SSL: ssl
- name: test-dns-loadbalanced-openssl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: ssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: start load balancer
    vars:
      MONGODB_URI: mongodb://localhost:27017,localhost:27018
  - func: run tests
    vars:
      AUTH: noauth
      DNS: loadbalanced
      SSL: ssl
- name: test-dns-auth-openssl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: replica_set
      VERSION: latest
      AUTHSOURCE: thisDB
  - func: run tests
    vars:
      AUTH: auth
      DNS: dns-auth
      SSL: ssl
- name: test-dns-auth-winssl
  depends_on:
    name: debug-compile-sspi-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sspi-winssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: replica_set
      VERSION: latest
      AUTHSOURCE: thisDB
  - func: run tests
    vars:
      AUTH: auth
      DNS: dns-auth
      SSL: ssl
- name: test-dns-auth-darwinssl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: replica_set
      VERSION: latest
      AUTHSOURCE: thisDB
  - func: run tests
    vars:
      AUTH: auth
      DNS: dns-auth
      SSL: ssl
- name: test-latest-server-compression-zlib
  tags:
  - compression
  - latest
  - zlib
  depends_on:
    name: debug-compile-compression-zlib
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-compression-zlib
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: zlib
      SSL: nossl
      VERSION: latest
  - func: run tests
    vars:
      AUTH: noauth
      COMPRESSORS: zlib
      SSL: nossl
- name: test-latest-server-compression-snappy
  tags:
  - compression
  - latest
  - snappy
  depends_on:
    name: debug-compile-compression-snappy
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-compression-snappy
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: snappy
      SSL: nossl
      VERSION: latest
  - func: run tests
    vars:
      AUTH: noauth
      COMPRESSORS: snappy
      SSL: nossl
- name: test-latest-server-compression-zstd
  tags:
  - compression
  - latest
  - zstd
  depends_on:
    name: debug-compile-compression-zstd
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-compression-zstd
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: zstd
      SSL: nossl
      VERSION: latest
  - func: run tests
    vars:
      AUTH: noauth
      COMPRESSORS: zstd
      SSL: nossl
- name: test-latest-server-compression
  tags:
  - compression
  - latest
  - snappy
  - zlib
  - zstd
  depends_on:
    name: debug-compile-compression
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-compression
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: snappy-zlib-zstd
      SSL: nossl
      VERSION: latest
  - func: run tests
    vars:
      AUTH: noauth
      COMPRESSORS: snappy,zlib,zstd
      SSL: nossl
- name: retry-true-latest-server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
    vars:
      URI: mongodb://localhost/?retryWrites=true
- name: test-latest-server-hardened
  tags:
  - hardened
  - latest
  depends_on:
    name: hardened-compile
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: hardened-compile
  - func: bootstrap mongo-orchestration
    vars:
      TOPOLOGY: server
      VERSION: latest
  - func: run tests
- name: authentication-tests-openssl
  tags:
  - authentication-tests
  - openssl
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: run auth tests
- name: authentication-tests-openssl-static
  tags:
  - authentication-tests
  - openssl-static
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl-static
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl-static
  - func: run auth tests
- name: authentication-tests-darwinssl
  tags:
  - authentication-tests
  - darwinssl
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: run auth tests
- name: authentication-tests-winssl
  tags:
  - authentication-tests
  - sspi
  - winssl
  depends_on:
    name: debug-compile-sspi-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sspi-winssl
  - func: run auth tests
- name: authentication-tests-openssl-nosasl
  tags:
  - authentication-tests
  - nosasl
  - openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: run auth tests
- name: test-valgrind-memcheck-mock-server
  tags:
  - test-valgrind
  depends_on:
    name: debug-compile-valgrind
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-valgrind
  - func: run mock server tests
    vars:
      SSL: ssl
      VALGRIND: 'on'
- name: test-asan-memcheck-mock-server
  tags:
  - test-asan
  depends_on:
    name: debug-compile-asan-clang
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang
  - func: run mock server tests
    vars:
      ASAN: 'on'
      SSL: ssl
- name: test-mongohouse
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: build mongohouse
  - func: run mongohouse
  - func: test mongohouse
- name: test-coverage-mock-server
  tags:
  - test-coverage
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: run mock server tests
    vars:
      SSL: ssl
  - func: update codecov.io
- name: test-coverage-latest-server-dns
  tags:
  - test-coverage
  exec_timeout_secs: 3600
  commands:
  - func: debug-compile-coverage-notest-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: replica_set
      VERSION: latest
  - func: run tests
    vars:
      AUTH: auth
      DNS: 'on'
      SSL: ssl
  - func: update codecov.io
- name: authentication-tests-memcheck
  tags:
  - authentication-tests
  - valgrind
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        VALGRIND=ON DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=AUTO                   SSL=OPENSSL sh .evergreen/compile.sh
  - func: run auth tests
    vars:
      valgrind: 'true'
- name: test-versioned-api
  tags:
  - versioned-api
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      REQUIRE_API_VERSION: 'true'
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: test versioned api
    vars:
      AUTH: auth
      SSL: ssl
- name: test-versioned-api-accept-version-two
  tags:
  - versioned-api
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: versioned-api-testing
      SSL: nossl
      TOPOLOGY: server
      VERSION: '5.0'
  - func: test versioned api
    vars:
      AUTH: noauth
      SSL: nossl
- name: build-and-run-authentication-tests-openssl-0.9.8
  commands:
  - func: install ssl
    vars:
      SSL: openssl-0.9.8zh
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=OPENSSL sh .evergreen/compile.sh
  - func: run auth tests
    vars:
      obsolete_tls: true
  - func: upload build
- name: build-and-run-authentication-tests-openssl-1.0.0
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.0t
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=OPENSSL sh .evergreen/compile.sh
  - func: run auth tests
    vars:
      obsolete_tls: true
  - func: upload build
- name: build-and-run-authentication-tests-openssl-1.0.1
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.1u
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS=-Wno-redundant-decls
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=OPENSSL sh .evergreen/compile.sh
  - func: run auth tests
  - func: upload build
- name: build-and-run-authentication-tests-openssl-1.0.1-fips
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.1u-fips
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS=-Wno-redundant-decls
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=OPENSSL OPENSSL_FIPS=1 sh .evergreen/compile.sh
  - func: run auth tests
  - func: upload build
- name: build-and-run-authentication-tests-openssl-1.0.2
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.2l
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=OPENSSL sh .evergreen/compile.sh
  - func: run auth tests
  - func: upload build
- name: build-and-run-authentication-tests-openssl-1.1.0
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.1.0f
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=OPENSSL sh .evergreen/compile.sh
  - func: run auth tests
  - func: upload build
- name: build-and-run-authentication-tests-libressl-2.5
  commands:
  - func: install ssl
    vars:
      SSL: libressl-2.5.2
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=LIBRESSL sh .evergreen/compile.sh
  - func: run auth tests
    vars:
      require_tls12: true
  - func: upload build
- name: build-and-run-authentication-tests-libressl-3.0-auto
  commands:
  - func: install ssl
    vars:
      SSL: libressl-3.0.2
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export CFLAGS=-Wno-redundant-decls
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=AUTO sh .evergreen/compile.sh
  - func: run auth tests
    vars:
      require_tls12: true
  - func: upload build
- name: build-and-run-authentication-tests-libressl-3.0
  commands:
  - func: install ssl
    vars:
      SSL: libressl-3.0.2
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        DEBUG=ON CC='${CC}' MARCH='${MARCH}' SASL=OFF SSL=LIBRESSL sh .evergreen/compile.sh
  - func: run auth tests
    vars:
      require_tls12: true
  - func: upload build
- name: test-latest-server-ipv6-client-ipv6-noauth-nosasl-nossl
  tags:
  - ipv4-ipv6
  - latest
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      IPV4_ONLY: 'off'
      VERSION: latest
  - func: run tests
    vars:
      IPV4_ONLY: 'off'
      URI: mongodb://[::1]/
- name: test-latest-server-ipv6-client-ipv4-noauth-nosasl-nossl
  tags:
  - ipv4-ipv6
  - latest
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      IPV4_ONLY: 'off'
      VERSION: latest
  - func: run tests
    vars:
      IPV4_ONLY: 'off'
      URI: mongodb://127.0.0.1/
- name: test-latest-server-ipv4-client-ipv4-noauth-nosasl-nossl
  tags:
  - ipv4-ipv6
  - latest
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      IPV4_ONLY: 'on'
      VERSION: latest
  - func: run tests
    vars:
      IPV4_ONLY: 'on'
      URI: mongodb://127.0.0.1/
- name: test-latest-server-ipv4-client-localhost-noauth-nosasl-nossl
  tags:
  - ipv4-ipv6
  - latest
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: bootstrap mongo-orchestration
    vars:
      IPV4_ONLY: 'on'
      VERSION: latest
  - func: run tests
    vars:
      IPV4_ONLY: 'on'
      URI: mongodb://localhost/
- name: debug-compile-aws
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Compile mongoc-ping. Disable unnecessary dependencies since mongoc-ping is copied to a remote Ubuntu 18.04 ECS cluster for testing, which may not have all dependent libraries.
        . .evergreen/find-cmake.sh
        export CC='${CC}'
        $CMAKE -DCMAKE_C_STANDARD=99 -DCMAKE_C_STANDARD_REQUIRED=ON -DCMAKE_C_EXTENSIONS=OFF -DENABLE_SASL=OFF -DENABLE_SNAPPY=OFF -DENABLE_ZSTD=OFF -DENABLE_CLIENT_SIDE_ENCRYPTION=OFF .
        $CMAKE --build . --target mongoc-ping
  - func: upload build
- name: test-aws-openssl-regular-latest
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: latest
  - func: run aws tests
    vars:
      TESTCASE: REGULAR
- name: test-aws-openssl-regular-5.0
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run aws tests
    vars:
      TESTCASE: REGULAR
- name: test-aws-openssl-regular-4.4
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run aws tests
    vars:
      TESTCASE: REGULAR
- name: test-aws-openssl-ec2-latest
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: latest
  - func: run aws tests
    vars:
      TESTCASE: EC2
- name: test-aws-openssl-ec2-5.0
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run aws tests
    vars:
      TESTCASE: EC2
- name: test-aws-openssl-ec2-4.4
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run aws tests
    vars:
      TESTCASE: EC2
- name: test-aws-openssl-ecs-latest
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: latest
  - func: run aws tests
    vars:
      TESTCASE: ECS
- name: test-aws-openssl-ecs-5.0
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run aws tests
    vars:
      TESTCASE: ECS
- name: test-aws-openssl-ecs-4.4
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run aws tests
    vars:
      TESTCASE: ECS
- name: test-aws-openssl-lambda-latest
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: latest
  - func: run aws tests
    vars:
      TESTCASE: LAMBDA
- name: test-aws-openssl-lambda-5.0
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run aws tests
    vars:
      TESTCASE: LAMBDA
- name: test-aws-openssl-lambda-4.4
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run aws tests
    vars:
      TESTCASE: LAMBDA
- name: test-aws-openssl-assume_role-latest
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: latest
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE
- name: test-aws-openssl-assume_role-5.0
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '5.0'
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE
- name: test-aws-openssl-assume_role-4.4
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
      VERSION: '4.4'
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE
- name: ocsp-openssl-test_1-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_1-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_1-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_2-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_2-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_3-rsa-delegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_3-rsa-delegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_3-rsa-delegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_3-rsa-delegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_3-rsa-delegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_3-rsa-delegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_3-rsa-nodelegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_3-rsa-nodelegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_3-rsa-nodelegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_3-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_3-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_3-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_3-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_3-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_4-rsa-delegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_4-rsa-delegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_4-rsa-delegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_4-rsa-delegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_4-rsa-delegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_4-rsa-delegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_4-rsa-nodelegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_4-rsa-nodelegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-test_4-rsa-nodelegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_4-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_4-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-test_4-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-test_4-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-test_4-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-soft_fail_test-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-soft_fail_test-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-soft_fail_test-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-soft_fail_test-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-soft_fail_test-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-soft_fail_test-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-soft_fail_test-rsa-nodelegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-soft_fail_test-rsa-nodelegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-soft_fail_test-rsa-nodelegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-soft_fail_test-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-soft_fail_test-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-soft_fail_test-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-soft_fail_test-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-soft_fail_test-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-soft_fail_test-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-soft_fail_test-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-soft_fail_test-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-soft_fail_test-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-malicious_server_test_1-rsa-delegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-malicious_server_test_1-rsa-delegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-malicious_server_test_1-rsa-delegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_1-rsa-delegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_1-rsa-delegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_1-rsa-delegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=on sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-malicious_server_test_1-rsa-nodelegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-malicious_server_test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-darwinssl-malicious_server_test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_1-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_1-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_2-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_2-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_2-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-winssl-malicious_server_test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_2-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_2-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-malicious_server_test_2-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_2-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_2-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-1.0.1-malicious_server_test_2-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa sh .evergreen/run-ocsp-test.sh
- name: ocsp-openssl-cache-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=rsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-cache-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=rsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-cache-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=rsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-1.0.1-cache-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        CERT_TYPE=rsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-1.0.1-cache-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        CERT_TYPE=rsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-1.0.1-cache-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        CERT_TYPE=rsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-cache-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=ecdsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-cache-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=ecdsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-cache-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=ecdsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-1.0.1-cache-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: latest
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        CERT_TYPE=ecdsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-1.0.1-cache-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '5.0'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        CERT_TYPE=ecdsa .evergreen/run-ocsp-cache-test.sh
- name: ocsp-openssl-1.0.1-cache-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=off sh .evergreen/run-ocsp-responder.sh
  - func: bootstrap mongo-orchestration
    vars:
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
      VERSION: '4.4'
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export LD_LIBRARY_PATH=$(pwd)/install-dir/lib
        CERT_TYPE=ecdsa .evergreen/run-ocsp-cache-test.sh
- name: test-loadbalanced-asan-auth-openssl-5.0
  tags:
  - '5.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: start load balancer
    vars:
      MONGODB_URI: mongodb://localhost:27017,localhost:27018
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      LOADBALANCED: loadbalanced
      SSL: ssl
- name: test-loadbalanced-asan-auth-openssl-latest
  tags:
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: start load balancer
    vars:
      MONGODB_URI: mongodb://localhost:27017,localhost:27018
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: auth
      LOADBALANCED: loadbalanced
      SSL: ssl
- name: test-loadbalanced-asan-noauth-nossl-5.0
  tags:
  - '5.0'
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: '5.0'
  - func: clone drivers-evergreen-tools
  - func: start load balancer
    vars:
      MONGODB_URI: mongodb://localhost:27017,localhost:27018
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      LOADBALANCED: loadbalanced
      SSL: nossl
- name: test-loadbalanced-asan-noauth-nossl-latest
  tags:
  - latest
  - test-asan
  exec_timeout_secs: 3600
  depends_on:
    name: debug-compile-asan-clang-openssl
  commands:
  - func: fetch build
    vars:
      BUILD_NAME: debug-compile-asan-clang-openssl
  - func: bootstrap mongo-orchestration
    vars:
      AUTH: noauth
      SSL: nossl
      TOPOLOGY: sharded_cluster
      VERSION: latest
  - func: clone drivers-evergreen-tools
  - func: start load balancer
    vars:
      MONGODB_URI: mongodb://localhost:27017,localhost:27018
  - func: run tests
    vars:
      ASAN: 'on'
      AUTH: noauth
      LOADBALANCED: loadbalanced
      SSL: nossl
buildvariants:
- name: releng
  display_name: '**Release Archive Creator'
  run_on: ubuntu1804-test
  tasks:
  - make-release-archive
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile .stdflags
  - .debug-compile !.sspi .openssl !.asan-clang
  - name: debug-compile-sasl-openssl-static
    distros:
    - ubuntu1804-build
  - name: debug-compile-nosasl-openssl-static
    distros:
    - ubuntu1804-build
  - .debug-compile !.sspi .nossl
  - debug-compile-valgrind
  - debug-compile-no-counters
  - compile-tracing
  - link-with-cmake
  - link-with-cmake-deprecated
  - abi-compliance-check
  - link-with-cmake-ssl
  - link-with-cmake-ssl-deprecated
  - link-with-cmake-snappy
  - link-with-cmake-snappy-deprecated
  - name: link-with-cmake-mac
    distros:
    - macos-1014
  - name: link-with-cmake-mac-deprecated
    distros:
    - macos-1014
  - name: link-with-cmake-windows
    distros:
    - windows-64-vs2017-test
  - name: link-with-cmake-windows-ssl
    distros:
    - windows-64-vs2017-test
  - name: link-with-cmake-windows-snappy
    distros:
    - windows-64-vs2017-test
  - name: link-with-cmake-mingw
    distros:
    - windows-64-vs2017-test
  - name: link-with-pkg-config
    distros:
    - ubuntu1804-test
  - name: link-with-pkg-config-mac
    distros:
    - macos-1014
  - link-with-pkg-config-ssl
  - link-with-bson
  - name: link-with-bson-windows
    distros:
    - windows-64-vs2017-test
  - name: link-with-bson-mac
    distros:
    - macos-1014
  - name: link-with-bson-mingw
    distros:
    - windows-64-vs2013-compile
  - check-headers
  - install-uninstall-check
  - name: install-uninstall-check-mingw
    distros:
    - windows-64-vs2017-test
  - name: install-uninstall-check-msvc
    distros:
    - windows-64-vs2017-test
  - debug-compile-with-warnings
  - name: build-and-test-with-toolchain
    distros:
    - debian10-small
- name: clang34ubuntu
  display_name: clang 3.4 (Ubuntu 14.04)
  expansions:
    CC: clang
  run_on: ubuntu1404-build
  tasks:
  - debug-compile-scan-build
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-rdtscp
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .4.0 .openssl !.nosasl .server
  - .3.6 .openssl !.nosasl .server
- name: clang35
  display_name: clang 3.5 (Debian 8.1)
  expansions:
    CC: clang
  run_on: debian81-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile .stdflags
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .4.0 .openssl !.nosasl .server
- name: clang38
  display_name: clang 3.8 (Debian 9.2)
  expansions:
    CC: clang
  run_on: debian92-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile .stdflags
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .openssl-static
  - .debug-compile !.sspi .nossl
  - .latest .openssl !.nosasl .server
  - .latest .openssl-static !.nosasl .server
  - .latest .nossl
  - .5.0 .openssl !.nosasl .server
  - .4.4 .openssl !.nosasl .server
  - .4.2 .openssl !.nosasl .server
- name: openssl
  display_name: OpenSSL / LibreSSL
  run_on: archlinux-build
  tasks:
  - build-and-run-authentication-tests-openssl-0.9.8
  - build-and-run-authentication-tests-openssl-1.0.0
  - build-and-run-authentication-tests-openssl-1.0.1
  - build-and-run-authentication-tests-openssl-1.0.2
  - build-and-run-authentication-tests-openssl-1.1.0
  - build-and-run-authentication-tests-openssl-1.0.1-fips
  - build-and-run-authentication-tests-libressl-2.5
  - build-and-run-authentication-tests-libressl-3.0-auto
  - build-and-run-authentication-tests-libressl-3.0
- name: clang37
  display_name: clang 3.7 (Archlinux)
  expansions:
    CC: clang
  run_on: archlinux-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile .stdflags
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .4.0 .nossl
  - .3.6 .nossl
- name: clang60-i686
  display_name: clang 6.0 (i686) (Ubuntu 18.04)
  expansions:
    CC: clang
    MARCH: i686
  run_on: ubuntu1804-test
  tasks:
  - debug-compile-scan-build
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile .stdflags
  - .debug-compile !.sspi .nossl .nosasl
  - .latest .nossl .nosasl
  - .5.0 .nossl .nosasl
  - .4.4 .nossl .nosasl
  - .4.2 .nossl .nosasl
  - .4.0 .nossl .nosasl
- name: clang38-i686
  display_name: clang 3.8 (i686) (Ubuntu 16.04)
  expansions:
    CC: clang
    MARCH: i686
  run_on: ubuntu1604-test
  tasks:
  - debug-compile-scan-build
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile .stdflags
  - .debug-compile !.sspi .nossl .nosasl
  - .3.6 .nossl .nosasl
- name: clang38ubuntu
  display_name: clang 3.8 (Ubuntu 16.04)
  expansions:
    CC: clang
  run_on: ubuntu1604-test
  tasks:
  - .compression !.zstd
  - debug-compile-scan-build
  - debug-compile-asan-clang
  - debug-compile-ubsan
  - debug-compile-ubsan-with-extra-alignment
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile .stdflags
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .authentication-tests .valgrind
  - .4.4 .openssl !.nosasl .server
  - .4.2 .openssl !.nosasl .server
  - .4.0 .openssl !.nosasl .server
  - .3.6 .openssl !.nosasl .server
  - .test-coverage .3.6
- name: gcc48ubuntu
  display_name: GCC 4.8 (Ubuntu 14.04)
  expansions:
    CC: gcc
  run_on: ubuntu1404-build
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .4.0 .openssl !.nosasl .server
  - .3.6 .openssl !.nosasl .server
- name: gcc82rhel
  display_name: GCC 8.2 (RHEL 8.0)
  expansions:
    CC: gcc
  run_on: rhel80-test
  tasks:
  - .hardened
  - .compression !.snappy !.zstd
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .latest .openssl !.nosasl .server
  - .latest .nossl
- name: gcc48rhel
  display_name: GCC 4.8 (RHEL 7.0)
  expansions:
    CC: gcc
  run_on: rhel70
  tasks:
  - .hardened
  - .compression !.snappy
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .latest .openssl !.nosasl .server
  - .latest .nossl
  - .5.0 .openssl !.nosasl .server
  - .4.4 .openssl !.nosasl .server
  - .4.2 .openssl !.nosasl .server
  - .4.0 .openssl !.nosasl .server
  - .3.6 .openssl !.nosasl .server
- name: gcc49
  display_name: GCC 4.9 (Debian 8.1)
  expansions:
    CC: gcc
  run_on: debian81-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .4.0 .openssl !.nosasl .server
- name: gcc63
  display_name: GCC 6.3 (Debian 9.2)
  expansions:
    CC: gcc
  run_on: debian92-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .openssl-static
  - .debug-compile !.sspi .nossl
  - .latest .openssl !.nosasl .server
  - .latest .openssl-static !.nosasl .server
  - .latest .nossl
  - .5.0 .openssl !.nosasl .server
  - .4.4 .openssl !.nosasl .server
  - .4.2 .openssl !.nosasl .server
- name: gcc83
  display_name: GCC 8.3 (Debian 10.0)
  expansions:
    CC: gcc
  run_on: debian10-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .openssl-static
  - .debug-compile !.sspi .nossl
  - .latest .openssl !.nosasl .server
  - .latest .openssl-static !.nosasl .server
  - .latest .nossl
- name: gcc102
  display_name: GCC 10.2 (Debian 11.0)
  expansions:
    CC: gcc
  run_on: debian11-large
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .openssl-static
  - .debug-compile !.sspi .nossl
  - .latest .openssl !.nosasl .server
  - .latest .openssl-static !.nosasl .server
  - .latest .nossl
- name: gcc94
  display_name: GCC 9.4 (Ubuntu 20.04)
  expansions:
    CC: gcc
  run_on: ubuntu2004-large
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .openssl-static
  - .debug-compile !.sspi .nossl
  - .latest .openssl !.nosasl .server
  - .latest .openssl-static !.nosasl .server
  - .latest .nossl
- name: gcc75-i686
  display_name: GCC 7.5 (i686) (Ubuntu 18.04)
  expansions:
    CC: gcc
    MARCH: i686
  run_on: ubuntu1804-test
  tasks:
  - debug-compile-coverage
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile !.sspi .nossl .nosasl
  - .latest .nossl .nosasl
  - .5.0 .nossl .nosasl
  - .4.4 .nossl .nosasl
  - .4.2 .nossl .nosasl
  - .4.0 .nossl .nosasl
- name: gcc75
  display_name: GCC 7.5 (Ubuntu 18.04)
  expansions:
    CC: gcc
  run_on: ubuntu1804-test
  tasks:
  - .compression !.zstd
  - debug-compile-asan-gcc
  - debug-compile-coverage
  - debug-compile-nosrv
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .authentication-tests .valgrind
  - .latest .openssl !.nosasl .server
  - .latest .nossl
  - .latest .openssl .nosasl .replica_set
  - .latest .openssl !.nosasl .replica_set
  - retry-true-latest-server
  - .5.0 .openssl !.nosasl .server
  - .4.4 .openssl !.nosasl .server
  - .4.2 .openssl !.nosasl .server
  - .4.0 .openssl !.nosasl .server
  - test-dns-openssl
  - test-dns-auth-openssl
  - test-dns-loadbalanced-openssl
- name: gcc54
  display_name: GCC 5.4 (Ubuntu 16.04)
  expansions:
    CC: gcc
  run_on: ubuntu1604-test
  tasks:
  - .compression !.zstd
  - debug-compile-asan-gcc
  - debug-compile-coverage
  - debug-compile-nosrv
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
- name: darwin
  display_name: '*Darwin, macOS (Apple LLVM)'
  expansions:
    CC: clang
  run_on: macos-1014
  tasks:
  - .compression !.snappy !.zstd
  - debug-compile-coverage
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-rdtscp
  - debug-compile-no-align
  - debug-compile-nosrv
  - .debug-compile .darwinssl
  - .debug-compile !.sspi .nossl
  - .debug-compile .clang
  - .authentication-tests .darwinssl
  - .latest .darwinssl !.nosasl .server
  - .latest .nossl
  - .5.0 .darwinssl !.nosasl .server
  - .4.4 .darwinssl !.nosasl .server
  - .4.2 .darwinssl !.nosasl .server
  - .4.0 .darwinssl !.nosasl .server
  - .3.6 .darwinssl !.nosasl .server
  - test-dns-darwinssl
  - test-dns-auth-darwinssl
  - debug-compile-lto
  - debug-compile-lto-thin
  - debug-compile-aws
  - test-aws-openssl-regular-4.4
  - test-aws-openssl-regular-latest
- name: windows-2017-32
  display_name: Windows (i686) (VS 2017)
  expansions:
    CC: Visual Studio 15 2017
  run_on: windows-64-vs2017-test
  tasks:
  - .debug-compile .winssl .nosasl
  - .debug-compile !.sspi .nossl .nosasl
  - .debug-compile .sspi !.openssl !.openssl-static
  - .server .winssl .latest .nosasl
  - .latest .nossl .nosasl
  - .nosasl .latest .nossl
  - .sspi .latest
- name: windows-2017
  display_name: Windows (VS 2017)
  expansions:
    CC: Visual Studio 15 2017 Win64
  run_on: windows-64-vs2017-test
  tasks:
  - .debug-compile .winssl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .debug-compile .sspi !.openssl-static
  - .server .winssl .latest
  - .server .openssl .latest !.nosasl
  - .latest .nossl
  - .nosasl .latest .nossl
  - .sspi .latest
  - test-dns-winssl
  - test-dns-auth-winssl
  - debug-compile-aws
  - .5.0 .winssl !.nosasl .server
  - .4.4 .winssl !.nosasl .server
  - test-aws-openssl-regular-4.4
  - test-aws-openssl-regular-latest
- name: windows-2015
  display_name: Windows (VS 2015)
  expansions:
    CC: Visual Studio 14 2015 Win64
  run_on: windows-64-vs2015-compile
  tasks:
  - .compression !.snappy !.zstd !.latest
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - debug-compile-nosrv
  - .debug-compile .winssl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .debug-compile .sspi !.openssl-static
  - .authentication-tests .openssl !.sasl
  - .authentication-tests .winssl
  - .4.2 .winssl !.nosasl .server
  - .4.0 .winssl !.nosasl .server
  - .3.6 .winssl !.nosasl .server
- name: windows-2015-32
  display_name: Windows (i686) (VS 2015)
  expansions:
    CC: Visual Studio 14 2015
  run_on: windows-64-vs2015-compile
  tasks:
  - .compression !.snappy !.zstd !.latest
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile .sspi !.openssl !.openssl-static
  - .debug-compile .winssl .nosasl
  - .debug-compile !.sspi .nossl .nosasl
  - .authentication-tests .winssl
  - .4.2 .winssl .nosasl .server
  - .4.0 .winssl .nosasl .server
- name: windows-2013
  display_name: Windows (VS 2013)
  expansions:
    CC: Visual Studio 12 2013 Win64
  run_on: windows-64-vs2013-compile
  tasks:
  - .compression !.snappy !.zstd !.latest
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile .winssl !.client-side-encryption
  - .debug-compile !.sspi .openssl !.client-side-encryption
  - .debug-compile !.sspi .nossl
  - .debug-compile .sspi !.client-side-encryption !.openssl-static
  - .authentication-tests .openssl !.sasl
  - .authentication-tests .winssl
  - .4.2 .winssl !.nosasl .server !.client-side-encryption
  - .4.0 .winssl !.nosasl .server
- name: windows-2013-32
  display_name: Windows (i686) (VS 2013)
  expansions:
    CC: Visual Studio 12 2013
  run_on: windows-64-vs2013-compile
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-rdtscp
  - .debug-compile .sspi !.openssl !.openssl-static
  - .debug-compile .winssl .nosasl !.client-side-encryption
  - .debug-compile !.sspi .nossl .nosasl
  - .authentication-tests .winssl
  - .4.2 .winssl .nosasl .server !.client-side-encryption
  - .4.0 .winssl .nosasl .server
- name: mingw-windows2016
  display_name: MinGW-W64 (Windows Server 2016)
  expansions:
    CC: mingw
  run_on: windows-64-vs2017-test
  tasks:
  - debug-compile-nosasl-nossl
  - .debug-compile .winssl .sspi
  - .latest .nossl .nosasl .server
  - .latest .winssl .sspi .server
- name: mingw
  display_name: MinGW-W64
  expansions:
    CC: mingw
  run_on: windows-64-vs2013-compile
  tasks:
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile .nossl .nosasl
  - .debug-compile .winssl .sspi
- name: power8-rhel81
  display_name: Power8 (ppc64le) (RHEL 8.1)
  expansions:
    CC: gcc
  run_on: rhel81-power8-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl !.client-side-encryption
  - .debug-compile !.sspi .openssl-static !.client-side-encryption
  - .debug-compile !.sspi .nossl
  - .latest .openssl !.nosasl .server !.client-side-encryption
  - .latest .openssl-static !.nosasl .server !.client-side-encryption
  - .latest .nossl
  - .5.0 .openssl !.nosasl .server !.client-side-encryption
  - .4.4 .openssl !.nosasl .server !.client-side-encryption
  - .4.2 .openssl !.nosasl .server !.client-side-encryption
  - test-dns-openssl
  batchtime: 1440
- name: arm-ubuntu1804
  display_name: '*ARM (aarch64) (Ubuntu 18.04)'
  expansions:
    CC: gcc
  run_on: ubuntu1804-arm64-large
  tasks:
  - .compression !.snappy !.zstd
  - debug-compile-scan-build
  - debug-compile-coverage
  - debug-compile-no-align
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .latest .openssl !.nosasl .server
  - .latest .nossl
  - .5.0 .openssl !.nosasl .server
  - .4.4 .openssl !.nosasl .server
  - .4.2 .openssl !.nosasl .server
  - test-dns-openssl
  batchtime: 1440
- name: arm-ubuntu1604
  display_name: '*ARM (aarch64) (Ubuntu 16.04)'
  expansions:
    CC: gcc
  run_on: ubuntu1604-arm64-large
  tasks:
  - .compression !.snappy !.zstd
  - debug-compile-scan-build
  - debug-compile-coverage
  - debug-compile-no-align
  - release-compile
  - debug-compile-nosasl-nossl
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .4.0 .openssl !.nosasl .server
  batchtime: 1440
- name: zseries-rhel83
  display_name: '*zSeries'
  expansions:
    CC: gcc
  run_on: rhel83-zseries-small
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile !.sspi .openssl
  - .debug-compile !.sspi .nossl
  - .authentication-tests .openssl
  - .latest .openssl !.nosasl .server
  - .latest .nossl
  - .6.0 .openssl !.nosasl .server
  - .5.0 .openssl !.nosasl .server
  batchtime: 1440
- name: valgrind-ubuntu
  display_name: Valgrind Tests (Ubuntu 18.04)
  expansions:
    CC: gcc
  run_on: ubuntu1804-build
  tasks:
  - .debug-compile !.sspi .openssl !.sasl
  - .debug-compile !.sspi .nossl !.sasl
  - .debug-compile .special .valgrind
  - .test-valgrind !.3.6
  batchtime: 1440
- name: valgrind-ubuntu-1404
  display_name: Valgrind Tests - MongoDB (pre 4.0) (Ubuntu 14.04)
  expansions:
    CC: gcc
  run_on: ubuntu1404-build
  tasks:
  - .debug-compile !.sspi .openssl !.sasl
  - .debug-compile !.sspi .nossl !.sasl
  - .debug-compile .special .valgrind
  - .test-valgrind .3.6
  batchtime: 1440
- name: asan-ubuntu
  display_name: ASAN Tests (Ubuntu 18.04)
  expansions:
    CC: clang
  run_on: ubuntu1804-test
  tasks:
  - .debug-compile .asan-clang
  - .test-asan !.3.6
  batchtime: 1440
- name: asan-ubuntu-without-csfle
  display_name: ASAN Tests without csfle (Ubuntu 18.04)
  expansions:
    CC: clang
    USE_CRYPT_SHARED: 'OFF'
  run_on: ubuntu1804-test
  tasks:
  - debug-compile-asan-openssl-cse
  - .test-asan !.3.6 .client-side-encryption
  batchtime: 1440
- name: asan-ubuntu-ubuntu1604
  display_name: ASAN Tests (Ubuntu 16.04)
  expansions:
    CC: clang
  run_on: ubuntu1604-test
  tasks:
  - .debug-compile .asan-clang
  - .test-asan .3.6
  batchtime: 1440
- name: clang60ubuntu
  display_name: clang 6.0 (Ubuntu 18.04)
  expansions:
    CC: clang
  run_on: ubuntu1804-test
  tasks:
  - debug-compile-aws
  - debug-compile-nosasl-openssl-static
  - debug-compile-sasl-openssl-static
  - debug-compile-sspi-openssl-static
  - test-aws-openssl-regular-latest
  - test-aws-openssl-ec2-latest
  - test-aws-openssl-ecs-latest
  - test-aws-openssl-assume_role-latest
  - test-aws-openssl-lambda-latest
  - test-aws-openssl-regular-4.4
  - test-aws-openssl-ec2-4.4
  - test-aws-openssl-ecs-4.4
  - test-aws-openssl-assume_role-4.4
  - test-aws-openssl-lambda-4.4
- name: rhel62
  display_name: RHEL 6.2
  expansions:
    CC: gcc
  run_on: rhel62-test
  tasks:
  - debug-compile-sasl-openssl
  - test-4.0-server-auth-sasl-openssl
  - test-4.0-replica-set-auth-sasl-openssl
  - test-latest-server-auth-sasl-openssl
  - test-latest-replica-set-auth-sasl-openssl
  batchtime: 1440
- name: mongohouse
  display_name: Mongohouse Test
  run_on: ubuntu1804-test
  tasks:
  - debug-compile-sasl-openssl
  - test-mongohouse
- name: ocsp
  display_name: OCSP tests
  run_on: ubuntu2004-small
  tasks:
  - name: debug-compile-nosasl-openssl
    distros:
    - ubuntu2004-small
  - name: debug-compile-nosasl-openssl-static
    distros:
    - ubuntu2004-small
  - name: debug-compile-nosasl-darwinssl
    distros:
    - macos-1014
  - name: debug-compile-nosasl-winssl
    distros:
    - windows-64-vs2017-test
  - name: .ocsp-openssl
    distros:
    - ubuntu2004-small
  - name: .ocsp-darwinssl
    distros:
    - macos-1014
  - name: .ocsp-winssl
    distros:
    - windows-64-vs2017-test
  - name: debug-compile-nosasl-openssl-1.0.1
    distros:
    - ubuntu2004-small
  - name: .ocsp-openssl-1.0.1
    distros:
    - ubuntu2004-small
  batchtime: 10080
- name: packaging
  display_name: Linux Distro Packaging
  run_on: ubuntu1804-test
  tasks:
  - debian-package-build
  - name: rpm-package-build
    distros:
    - rhel82-arm64-small
  batchtime: 1440
- name: tsan-ubuntu
  display_name: Thread Sanitizer (TSAN) Tests (Ubuntu 18.04)
  expansions:
    CC: /opt/mongodbtoolchain/v3/bin/clang
  run_on: ubuntu1804-small
  tasks:
  - .tsan !.3.6
  batchtime: 1440
- name: versioned-api
  display_name: Versioned API Tests
  run_on: ubuntu1804-test
  tasks:
  - debug-compile-nosasl-openssl
  - debug-compile-nosasl-nossl
  - .versioned-api
- name: macos_m1
  display_name: macOS m1 (Apple LLVM)
  expansions:
    CC: clang
  run_on: macos-1100-arm64
  tasks:
  - debug-compile-sasl-darwinssl
